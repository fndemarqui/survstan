[{"path":"https://fndemarqui.github.io/survstan/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 survstan authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fndemarqui.github.io/survstan/articles/LRT.html","id":"ipass-data","dir":"Articles","previous_headings":"","what":"Ipass data","title":"Likelihood ratio tests with the survstan package","text":"survstan::ipass data illustrates real situation presence crossing survival curves. case, PH PO models inadequate, YP model considered data analysis.  Since YP models includes PH PO models particular cases, can perform LRT follows:","code":"data(ipass) glimpse(ipass) #> Rows: 1,217 #> Columns: 3 #> $ time   <dbl> 0.102703, 0.102703, 0.102703, 0.205483, 0.376758, 0.376758, 0.3… #> $ status <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ arm    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …  ipass <- ipass %>%   mutate(     arm = as.factor(ipass$arm),      arm = ifelse(arm == 1, \"gefitinib\", \"carboplatin/paclitaxel\")   )  km <- survfit(Surv(time, status) ~ arm, data = ipass) ggsurv(km) aft <- aftreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\") ah <- ahreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\") ph <- phreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\") po <- poreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\") yp <- ypreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\") eh <- ehreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\")  anova(ph, yp) #>  #> weibull(ph) 1: Surv(time, status) ~ arm  #> weibull(yp) 2: Surv(time, status) ~ arm  #> ---  #>                  loglik       LR df  Pr(>Chi)     #> weibull(ph) 1: -2839.24   133.72  1 < 2.2e-16 *** #> weibull(yp) 2: -2772.38        -  -         -     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 anova(po, yp) #>  #> weibull(po) 1: Surv(time, status) ~ arm  #> weibull(yp) 2: Surv(time, status) ~ arm  #> ---  #>                  loglik       LR df  Pr(>Chi)     #> weibull(po) 1: -2851.32   157.89  1 < 2.2e-16 *** #> weibull(yp) 2: -2772.38        -  -         -     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  anova(aft, eh) #>  #> weibull(aft) 1: Surv(time, status) ~ arm  #> weibull(eh) 2: Surv(time, status) ~ arm  #> ---  #>                   loglik       LR df  Pr(>Chi)     #> weibull(aft) 1: -2839.24   133.72  1 < 2.2e-16 *** #> weibull(eh) 2:  -2772.38        -  -         -     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 anova(ah, eh) #>  #> weibull(ah) 1: Surv(time, status) ~ arm  #> weibull(eh) 2: Surv(time, status) ~ arm  #> ---  #>                  loglik       LR df  Pr(>Chi)     #> weibull(ah) 1: -2839.24   133.72  1 < 2.2e-16 *** #> weibull(eh) 2: -2772.38        -  -         -     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 anova(ph, eh) #>  #> weibull(ph) 1: Surv(time, status) ~ arm  #> weibull(eh) 2: Surv(time, status) ~ arm  #> ---  #>                  loglik       LR df  Pr(>Chi)     #> weibull(ph) 1: -2839.24   133.72  1 < 2.2e-16 *** #> weibull(eh) 2: -2772.38        -  -         -     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://fndemarqui.github.io/survstan/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fabio Demarqui. Author, maintainer, copyright holder. Andrew Johnson. Contributor.","code":""},{"path":"https://fndemarqui.github.io/survstan/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Demarqui F (2024). survstan: Fitting Survival Regression Models via 'Stan'. R package version 0.1.0, https://fndemarqui.github.io/survstan/, https://github.com/fndemarqui/survstan.","code":"@Manual{,   title = {survstan: Fitting Survival Regression Models via 'Stan'},   author = {Fabio Demarqui},   year = {2024},   note = {R package version 0.1.0,     https://fndemarqui.github.io/survstan/},   url = {https://github.com/fndemarqui/survstan}, }"},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"survstan","dir":"","previous_headings":"","what":"Fitting Survival Regression Models via Stan","title":"Fitting Survival Regression Models via Stan","text":"R package survstan can used fit right-censored survival data independent censoring. implemented models allow fitting survival data presence/absence covariates. inferential procedures currently based maximum likelihood (ML) approach.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fitting Survival Regression Models via Stan","text":"can install released version survstan CRAN : can install development version survstan GitHub :","code":"install.packages(\"survstan\") # install.packages(\"devtools\") devtools::install_github(\"fndemarqui/survstan\")"},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"inference-procedures","dir":"","previous_headings":"","what":"Inference procedures","title":"Fitting Survival Regression Models via Stan","text":"Let (ti,δi)(t_{}, \\delta_{}) observed survival time corresponding failure indicator, =1,⋯,ni=1, \\cdots, n, 𝛉\\boldsymbol{\\theta} k×1k \\times 1 vector parameters. , likelihood function right-censored survival data independent censoring can expressed : L(𝛉)=∏=1nf(ti|𝛉)δiS(ti|𝛉)1−δi. L(\\boldsymbol{\\theta}) = \\prod_{=1}^{n}f(t_{}|\\boldsymbol{\\theta})^{\\delta_{}}S(t_{}|\\boldsymbol{\\theta})^{1-\\delta_{}}. maximum likelihood estimate (MLE) 𝛉\\boldsymbol{\\theta} obtained directly maximization log(L(𝛉))\\log(L(\\boldsymbol{\\theta})) using rstan::optimizing() function. function rstan::optimizing() provides hessian matrix log(L(𝛉))\\log(L(\\boldsymbol{\\theta})), needed obtain observed Fisher information matrix, given : ℐ(𝛉̂)=−∂2∂𝛉𝛉′logL(𝛉)∣𝛉=𝛉̂,         \\mathscr{}(\\hat{\\boldsymbol{\\theta}}) = -\\frac{\\partial^2}{\\partial \\boldsymbol{\\theta}\\boldsymbol{\\theta}'} \\log L(\\boldsymbol{\\theta})\\mid_{\\boldsymbol{\\theta}=\\hat{\\boldsymbol{\\theta}}}, Inferences 𝛉\\boldsymbol{\\theta} based asymptotic properties MLE, 𝛉̂\\hat{\\boldsymbol{\\theta}}, state : 𝛉̂≍Nk(𝛉,ℐ−1(𝛉̂)). \\hat{\\boldsymbol{\\theta}} \\asymp N_{k}(\\boldsymbol{\\theta}, \\mathscr{}^{-1}(\\hat{\\boldsymbol{\\theta}})).","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"baseline-distributions","dir":"","previous_headings":"","what":"Baseline Distributions","title":"Fitting Survival Regression Models via Stan","text":"popular baseline survival distributions implemented R package survstan. distributions include: Exponential Weibull Lognormal Loglogistic Gamma, Generalized Gamma (original Stacy’s parametrization) Generalized Gamma (alternative Prentice’s parametrization) Gompertz Rayleigh Birnbaum-Saunders (fatigue) parametrizations adopted package survstan presented next.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"exponential-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Exponential Distribution","title":"Fitting Survival Regression Models via Stan","text":"T∼Exp(λ)T \\sim \\mbox{Exp}(\\lambda), f(t|λ)=λexp{−λt}[0,∞)(t),         f(t|\\lambda) = \\lambda\\exp\\left\\{-\\lambda t\\right\\}I_{[0, \\infty)}(t),  λ>0\\lambda>0 rate parameter. survival hazard functions case given : S(t|λ)=exp{−λt}         S(t|\\lambda) = \\exp\\left\\{-\\lambda t\\right\\}  h(t|λ)=λ.         h(t|\\lambda) = \\lambda.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"weibull-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Weibull Distribution","title":"Fitting Survival Regression Models via Stan","text":"T∼Weibull(α,γ)T \\sim \\mbox{Weibull}(\\alpha, \\gamma), f(t|α,γ)=αγαtα−1exp{−(tγ)α}[0,∞)(t), f(t|\\alpha, \\gamma) = \\frac{\\alpha}{\\gamma^{\\alpha}}t^{\\alpha-1}\\exp\\left\\{-\\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right\\}I_{[0, \\infty)}(t),  α>0\\alpha>0 γ>0\\gamma>0 shape scale parameters, respectively. survival hazard functions case given : S(t|α,γ)=exp{−(tγ)α}         S(t|\\alpha, \\gamma) = \\exp\\left\\{-\\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right\\}  h(t|α,γ)=αγαtα−1.         h(t|\\alpha, \\gamma) = \\frac{\\alpha}{\\gamma^{\\alpha}}t^{\\alpha-1}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"lognormal-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Lognormal Distribution","title":"Fitting Survival Regression Models via Stan","text":"T∼LN(μ,σ)T \\sim \\mbox{LN}(\\mu, \\sigma), f(t|μ,σ)=12πtσexp{−12(log(t)−μσ)2}[0,∞)(t), f(t|\\mu, \\sigma) = \\frac{1}{\\sqrt{2\\pi}t\\sigma}\\exp\\left\\{-\\frac{1}{2}\\left(\\frac{log(t)-\\mu}{\\sigma}\\right)^2\\right\\}I_{[0, \\infty)}(t),  −∞<μ<∞-\\infty < \\mu < \\infty σ>0\\sigma>0 mean standard deviation log scale TT. survival hazard functions case given : S(t|μ,σ)=Φ(−log(t)+μσ)S(t|\\mu, \\sigma) = \\Phi\\left(\\frac{-log(t)+\\mu}{\\sigma}\\right) h(t|μ,σ)=f(t|μ,σ)S(t|μ,σ),h(t|\\mu, \\sigma) = \\frac{f(t|\\mu, \\sigma)}{S(t|\\mu, \\sigma)}, Φ(⋅)\\Phi(\\cdot) cumulative distribution function standard normal distribution.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"loglogistic-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Loglogistic Distribution","title":"Fitting Survival Regression Models via Stan","text":"T∼LL(α,γ)T \\sim \\mbox{LL}(\\alpha, \\gamma), f(t|α,γ)=αγ(tγ)α−1[1+(tγ)α]2I[0,∞)(t),α>0,γ>0,     f(t|\\alpha, \\gamma) = \\frac{\\frac{\\alpha}{\\gamma}\\left(\\frac{t}{\\gamma}\\right)^{\\alpha-1}}{\\left[1 + \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right]^2}I_{[0, \\infty)}(t), ~ \\alpha>0, \\gamma>0, α>0\\alpha>0 γ>0\\gamma>0 shape scale parameters, respectively. survival hazard functions case given : S(t|α,γ)=11+(tγ)αS(t|\\alpha, \\gamma) = \\frac{1}{1+ \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}} h(t|α,γ)=αγ(tγ)α−11+(tγ)α.     h(t|\\alpha, \\gamma) = \\frac{\\frac{\\alpha}{\\gamma}\\left(\\frac{t}{\\gamma}\\right)^{\\alpha-1}}{1 + \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"gamma-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Gamma Distribution","title":"Fitting Survival Regression Models via Stan","text":"T∼Gamma(α,λ)T \\sim \\mbox{Gamma}(\\alpha, \\lambda), f(t|α,λ)=λαΓ(α)tα−1exp{−λt}[0,∞)(t),f(t|\\alpha, \\lambda) = \\frac{\\lambda^{\\alpha}}{\\Gamma(\\alpha)}t^{\\alpha-1}\\exp\\left\\{-\\lambda t\\right\\}I_{[0, \\infty)}(t), Γ(α)=∫0∞uα−1exp{−u}du\\Gamma(\\alpha) = \\int_{0}^{\\infty}u^{\\alpha-1}\\exp\\{-u\\}du gamma function. survival function given S(t|α,λ)=1−γ*(α,λt)Γ(α),S(t|\\alpha, \\lambda) = 1 - \\frac{\\gamma^{*}(\\alpha, \\lambda t)}{\\Gamma(\\alpha)}, γ*(α,λt)\\gamma^{*}(\\alpha, \\lambda t) lower incomplete gamma function, available numerically. Finally, hazard function expressed : h(t|α,λ)=f(t|α,λ)S(t|α,λ).h(t|\\alpha, \\lambda) = \\frac{f(t|\\alpha, \\lambda)}{S(t|\\alpha, \\lambda)}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"generalized-gamma-distribution-original-stacys-parametrization","dir":"","previous_headings":"Baseline Distributions","what":"Generalized Gamma Distribution (original Stacy’s parametrization)","title":"Fitting Survival Regression Models via Stan","text":"T∼ggstacy(α,γ,κ)T \\sim \\mbox{ggstacy}(\\alpha, \\gamma, \\kappa), f(t|α,γ,κ)=κγαΓ(α/κ)tα−1exp{−(tγ)κ}[0,∞)(t),f(t|\\alpha, \\gamma, \\kappa) = \\frac{\\kappa}{\\gamma^{\\alpha}\\Gamma(\\alpha/\\kappa)}t^{\\alpha-1}\\exp\\left\\{-\\left(\\frac{t}{\\gamma}\\right)^{\\kappa}\\right\\}I_{[0, \\infty)}(t), α>0\\alpha>0, γ>0\\gamma>0 κ>0\\kappa>0. can show survival function can expressed : S(t|α,γ,κ)=SG(x|ν,1),S(t|\\alpha, \\gamma, \\kappa) = S_{G}(x|\\nu, 1), x=(tγ)κx = \\displaystyle\\left(\\frac{t}{\\gamma}\\right)^\\kappa, FG(⋅|ν,1)F_{G}(\\cdot|\\nu, 1) corresponds distribution function gamma distribution shape parameter ν=α/γ\\nu = \\alpha/\\gamma scale parameter equals 1. Finally, hazard function expressed : h(t|α,γ,κ)=f(t|α,γ,κ)S(t|α,γ,κ).h(t|\\alpha, \\gamma, \\kappa) = \\frac{f(t|\\alpha, \\gamma, \\kappa)}{S(t|\\alpha, \\gamma, \\kappa)}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"generalized-gamma-distribution-alternative-prentices-parametrization","dir":"","previous_headings":"Baseline Distributions","what":"Generalized Gamma Distribution (alternative Prentice’s parametrization)","title":"Fitting Survival Regression Models via Stan","text":"T∼ggprentice(μ,σ,φ)T \\sim \\mbox{ggprentice}(\\mu, \\sigma, \\varphi), f(t|μ,σ,φ)={|φ|(φ−2)φ−2σtΓ(φ−2)exp{φ−2[φw−exp(φw)]}[0,∞)(t),φ≠012πtσexp{−12(log(t)−μσ)2}[0,∞)(t),φ=0f(t | \\mu, \\sigma, \\varphi) = \\begin{cases} \\frac{|\\varphi|(\\varphi^{-2})^{\\varphi^{-2}}}{\\sigma t\\Gamma(\\varphi^{-2})}\\exp\\{\\varphi^{-2}[\\varphi w - \\exp(\\varphi w)]\\}I_{[0, \\infty)}(t), & \\varphi \\neq 0 \\\\ \\frac{1}{\\sqrt{2\\pi}t\\sigma}\\exp\\left\\{-\\frac{1}{2}\\left(\\frac{log(t)-\\mu}{\\sigma}\\right)^2\\right\\}I_{[0, \\infty)}(t), & \\varphi = 0 \\end{cases}  w=log(t)−μσw = \\frac{\\log(t) - \\mu}{\\sigma}, −∞<μ<∞-\\infty < \\mu < \\infty, σ>0\\sigma>0 −∞<φ<∞-\\infty < \\varphi < \\infty$. can show survival function can expressed : S(t|μ,σ,φ)={SG(x|1/φ2,1),φ>01−SG(x|1/φ2,1),φ<0SLN(x|μ,σ),φ=0 S(t|\\mu, \\sigma, \\varphi) =   \\begin{cases}     S_{G}(x|1/\\varphi^2, 1), & \\varphi > 0 \\\\     1-S_{G}(x|1/\\varphi^2, 1), & \\varphi < 0 \\\\     S_{LN}(x|\\mu, \\sigma), & \\varphi = 0   \\end{cases}  x=1φ2exp{φw}x = \\frac{1}{\\varphi^2}\\exp\\{\\varphi w\\}, SG(⋅|1/φ2,1)S_{G}(\\cdot|1/\\varphi^2, 1) distribution function gamma distribution shape parameter 1/φ21/\\varphi^2 scale parameter equals 1, SLN(x|μ,σ)S_{LN}(x|\\mu, \\sigma) corresponds survival function lognormal distribution location parameter μ\\mu scale parameter σ\\sigma. Finally, hazard function expressed : h(t|α,γ,κ)=f(t|α,γ,κ)S(t|α,γ,κ).h(t|\\alpha, \\gamma, \\kappa) = \\frac{f(t|\\alpha, \\gamma, \\kappa)}{S(t|\\alpha, \\gamma, \\kappa)}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"gompertz-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Gompertz Distribution","title":"Fitting Survival Regression Models via Stan","text":"T∼Gamma(α,γ)T \\sim \\mbox{Gamma}(\\alpha, \\gamma), f(t|α,λ)=αexp{γx−αγ(eγx−1)}[0,∞)(t).f(t|\\alpha, \\lambda) = \\alpha\\exp\\left\\{\\gamma x-\\frac{\\alpha}{\\gamma}\\left(e^{\\gamma x} - 1\\right)\\right\\}I_{[0, \\infty)}(t). survival hazard functions given, respectively, S(t|α,λ)=exp{−αγ(eγx−1)}.S(t|\\alpha, \\lambda) = \\exp\\left\\{-\\frac{\\alpha}{\\gamma}\\left(e^{\\gamma x} - 1\\right)\\right\\}. $$h(t|\\alpha, \\lambda) = \\alpha\\exp\\{\\gamma x}.$$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"rayleigh-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Rayleigh Distribution","title":"Fitting Survival Regression Models via Stan","text":"Let T∼rayleigh(σ)T \\sim \\mbox{rayleigh}(\\sigma), σ>0\\sigma>0 scale parameter. , density, survival hazard functions respectively given : f(t|σ)=xσ2exp{−x22σ2},f(t|\\sigma) = \\frac{x}{\\sigma^2}\\exp\\left\\{-\\frac{x^2}{2\\sigma^2}\\right\\},S(t|σ)=exp{−x22σ2}S(t|\\sigma) = \\exp\\left\\{-\\frac{x^2}{2\\sigma^2}\\right\\} h(t|σ)=xσ2.h(t|\\sigma) = \\frac{x}{\\sigma^2}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"birnbaum-saunders-fatigue-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Birnbaum-Saunders (fatigue) Distribution","title":"Fitting Survival Regression Models via Stan","text":"T∼fatigue(α,γ)T \\sim \\mbox{fatigue}(\\alpha, \\gamma), f(t|α,γ)=tγ+γt2αtϕ(tγ+γt)(t),α>0,γ>0,     f(t|\\alpha, \\gamma) = \\frac{\\sqrt{\\frac{t}{\\gamma}}+\\sqrt{\\frac{\\gamma}{t}}}{2 \\alpha t}\\phi\\left(\\sqrt{\\frac{t}{\\gamma}}+\\sqrt{\\frac{\\gamma}{t}}\\right)(t), ~ \\alpha>0, \\gamma>0, ϕ(⋅)\\phi(\\cdot) probability density function standard normal distribution, α>0\\alpha>0 γ>0\\gamma>0 shape scale parameters, respectively. survival function case given : S(t|α,γ)=Φ(tγ−γt)(t)     S(t|\\alpha, \\gamma) =\\Phi\\left(\\sqrt{\\frac{t}{\\gamma}}-\\sqrt{\\frac{\\gamma}{t}}\\right)(t) , Φ(⋅)\\Phi(\\cdot) cumulative distribution function standard normal distribution. hazard function given h(t|μ,σ)=f(t|α,γ)S(t|α,γ).h(t|\\mu, \\sigma) = \\frac{f(t|\\alpha, \\gamma)}{S(t|\\alpha, \\gamma)}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"regression-models","dir":"","previous_headings":"","what":"Regression models","title":"Fitting Survival Regression Models via Stan","text":"covariates available, possible fit six different regression models R package survstan: accelerated failure time (AFT) models; proportional hazards (PH) models; proportional odds (PO) models; accelerated hazard (AH) models. Yang Prentice (YP) models. extended hazard (EH) models. regression survival models implemented R package survstan briefly described sequel. Denote 𝐱\\mathbf{x} 1×p1\\times p vector covariates, let 𝛃\\boldsymbol{\\beta} 𝛟\\boldsymbol{\\phi} p×1p \\times 1 vectors regression coefficients, 𝛉\\boldsymbol{\\theta} vector parameters associated baseline survival distribution. prevent identifiability issues, assumed linear predictors 𝐱𝛃\\mathbf{x} \\boldsymbol{\\beta} 𝐱𝛟\\mathbf{x}\\boldsymbol{\\phi} include intercept term.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"accelerate-failure-time-models","dir":"","previous_headings":"Regression models","what":"Accelerate Failure Time Models","title":"Fitting Survival Regression Models via Stan","text":"Accelerated failure time (AFT) models defined T=exp{𝐱𝛃}ν, T = \\exp\\{\\mathbf{x} \\boldsymbol{\\beta}\\}\\nu,  ν\\nu follows baseline distribution survival function S0(⋅|𝛉)S_{0}(\\cdot|\\boldsymbol{\\theta}) f(t|𝛉,𝛃,𝐱)=e−𝐱𝛃f0(te−𝐱𝛃|𝛉) f(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = e^{-\\mathbf{x} \\boldsymbol{\\beta}}f_{0}(te^{-\\mathbf{x} \\boldsymbol{\\beta}}|\\boldsymbol{\\theta})  S(t|𝛉,𝛃,𝐱)=S0(te−𝐱𝛃|𝛉). S(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = S_{0}(t e^{-\\mathbf{x} \\boldsymbol{\\beta}}|\\boldsymbol{\\theta}).","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"proportional-hazards-models","dir":"","previous_headings":"Regression models","what":"Proportional Hazards Models","title":"Fitting Survival Regression Models via Stan","text":"Proportional hazards (PH) models defined h(t|𝛉,𝛃,𝐱)=h0(t|𝛉)exp{𝐱𝛃}, h(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = h_{0}(t|\\boldsymbol{\\theta})\\exp\\{\\mathbf{x} \\boldsymbol{\\beta}\\},  h0(t|𝛉)h_{0}(t|\\boldsymbol{\\theta}) baseline hazard function f(t|𝛉,𝛃,𝐱)=h0(t|𝛉)exp{𝐱𝛃−H0(t|𝛉)e𝐱𝛃}, f(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = h_{0}(t|\\boldsymbol{\\theta})\\exp\\left\\{\\mathbf{x} \\boldsymbol{\\beta} - H_{0}(t|\\boldsymbol{\\theta})e^{\\mathbf{x} \\boldsymbol{\\beta}}\\right\\},  S(t|𝛉,𝛃,𝐱)=exp{−H0(t|𝛉)e𝐱𝛃}. S(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = \\exp\\left\\{ - H_{0}(t|\\boldsymbol{\\theta})e^{\\mathbf{x} \\boldsymbol{\\beta}}\\right\\}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"proportional-odds-models","dir":"","previous_headings":"Regression models","what":"Proportional Odds Models","title":"Fitting Survival Regression Models via Stan","text":"Proportional Odds (PO) models defined R(t|𝛉,𝛃,𝐱)=R0(t|𝛉)exp{𝐱𝛃}, R(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = R_{0}(t|\\boldsymbol{\\theta})\\exp\\{\\mathbf{x} \\boldsymbol{\\beta}\\},  R0(t|𝛉)=1−S0(t|𝛉)S0(t|𝛉)=exp{H0(t|𝛉)}−1\\displaystyle R_{0}(t|\\boldsymbol{\\theta}) = \\frac{1-S_{0}(t|\\boldsymbol{\\theta})}{S_{0}(t|\\boldsymbol{\\theta})} = \\exp\\{H_{0}(t|\\boldsymbol{\\theta})\\}-1 baseline odds function f(t|𝛉,𝛃,𝐱)=h0(t|𝛉)exp{𝐱𝛃+H0(t|𝛉)}[1+R0(t|𝛉)e𝐱𝛃]2. f(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = \\frac{h_{0}(t|\\boldsymbol{\\theta})\\exp\\{\\mathbf{x} \\boldsymbol{\\beta} + H_{0}(t|\\boldsymbol{\\theta})\\}}{[1 + R_{0}(t|\\boldsymbol{\\theta})e^{\\mathbf{x} \\boldsymbol{\\beta}}]^2}. S(t|𝛉,𝛃,𝐱)=11+R0(t|𝛉)e𝐱𝛃. S(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = \\frac{1}{1 + R_{0}(t|\\boldsymbol{\\theta})e^{\\mathbf{x} \\boldsymbol{\\beta}}}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"accelerated-hazard-models","dir":"","previous_headings":"Regression models","what":"Accelerated Hazard Models","title":"Fitting Survival Regression Models via Stan","text":"Accelerated hazard (AH) models can defined h(t|𝛉,𝛃,𝐱)=h0(t/e𝐱𝛃|𝛉)h(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta},\\mathbf{x}) = h_{0}\\left(t/e^{\\mathbf{x}\\boldsymbol{\\beta}}|\\boldsymbol{\\theta}\\right) S(t|𝛉,𝛃,𝐱)=exp{−H0(t/e𝐱𝛃|𝛉)e𝐱𝛃}S(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta},\\mathbf{x}) = \\exp\\left\\{- H_{0}\\left(t/ e^{\\mathbf{x}\\boldsymbol{\\beta}}|\\boldsymbol{\\theta}\\right)e^{\\mathbf{x}\\boldsymbol{\\beta}} \\right\\}  f(t|𝛉,𝛃,𝐱)=h0(t/e𝐱𝛃|𝛉)exp{−H0(t/e𝐱𝛃|𝛉)e𝐱𝛃}.f(t|\\boldsymbol{\\theta}, \\boldsymbol{\\beta}, \\mathbf{x}) = h_{0}\\left(t/e^{\\mathbf{x}\\boldsymbol{\\beta}}|\\boldsymbol{\\theta}\\right)\\exp\\left\\{- H_{0}\\left(t/ e^{\\mathbf{x}\\boldsymbol{\\beta}}|\\boldsymbol{\\theta}\\right)e^{\\mathbf{x}\\boldsymbol{\\beta}} \\right\\}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"extended-hazard-models","dir":"","previous_headings":"Regression models","what":"Extended hazard Models","title":"Fitting Survival Regression Models via Stan","text":"survival function extended hazard (EH) model given : S(t|𝛉,𝛃,𝛟)=exp{−H0(t/e𝐱𝛃|𝛉)exp(𝐱(𝛃+𝛟))}.S(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = \\exp\\left\\{-H_{0}(t/e^{\\mathbf{x}\\boldsymbol{\\beta}}|\\boldsymbol{\\theta})\\exp(\\mathbf{x}(\\boldsymbol{\\beta} + \\boldsymbol{\\phi}))\\right\\}. hazard probability density functions expressed : h(t|𝛉,𝛃,𝛟)=h0(t/e𝐱𝛃|𝛉)exp{𝐱𝛟}h(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = h_{0}(t/e^{\\mathbf{x}\\boldsymbol{\\beta}}|\\boldsymbol{\\theta})\\exp\\{\\mathbf{x}\\boldsymbol{\\phi}\\}  f(t|𝛉,𝛃,𝛟)=h0(t/e𝐱𝛃|𝛉)exp{𝐱𝛃}exp{−H0(t/e𝐱𝛃|𝛉)exp(𝐱(𝛃+𝛟))},f(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = h_{0}(t/e^{\\mathbf{x}\\boldsymbol{\\beta}}|\\boldsymbol{\\theta})\\exp\\{\\mathbf{x}\\boldsymbol{\\beta}\\}\\exp\\left\\{-H_{0}(t/e^{\\mathbf{x}\\boldsymbol{\\beta}}|\\boldsymbol{\\theta})\\exp(\\mathbf{x}(\\boldsymbol{\\beta}+ \\boldsymbol{\\phi}))\\right\\}, respectively. EH model includes AH, AFT PH models particular cases 𝛟=𝟎\\boldsymbol{\\phi} = \\mathbf{0}, 𝛟=−𝛃\\boldsymbol{\\phi} = -\\boldsymbol{\\beta}, 𝛃=𝟎\\boldsymbol{\\beta} = \\mathbf{0}, respectively.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"yang-and-prentice-models","dir":"","previous_headings":"Regression models","what":"Yang and Prentice Models","title":"Fitting Survival Regression Models via Stan","text":"survival function Yang Prentice (YP) model given : S(t|𝛉,𝛃,𝛟)=[1+κSκLR0(t|𝛉)]−κL.S(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = \\left[1+\\frac{\\kappa_{S}}{\\kappa_{L}}R_{0}(t|\\boldsymbol{\\theta})\\right]^{-\\kappa_{L}}. hazard probability density functions expressed : h(t|𝛉,𝛃,𝛟)=κSh0(t|𝛉)exp{H0(t|𝛉)}[1+κSκLR0(t|𝛉)]h(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = \\frac{\\kappa_{S}h_{0}(t|\\boldsymbol{\\theta})\\exp\\{H_{0}(t|\\boldsymbol{\\theta})\\}}{\\left[1+\\frac{\\kappa_{S}}{\\kappa_{L}}R_{0}(t|\\boldsymbol{\\theta})\\right]}  f(t|𝛉,𝛃,𝛟)=κSh0(t|𝛉)exp{H0(t|𝛉)}[1+κSκLR0(t|𝛉)]−(1+κL),f(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = \\kappa_{S}h_{0}(t|\\boldsymbol{\\theta})\\exp\\{H_{0}(t|\\boldsymbol{\\theta})\\}\\left[1+\\frac{\\kappa_{S}}{\\kappa_{L}}R_{0}(t|\\boldsymbol{\\theta})\\right]^{-(1+\\kappa_{L})}, respectively, κS=exp{𝐱𝛃}\\kappa_{S} = \\exp\\{\\mathbf{x}\\boldsymbol{\\beta}\\} κL=exp{𝐱𝛟}\\kappa_{L} = \\exp\\{\\mathbf{x}\\boldsymbol{\\phi}\\}. YO model includes PH PO models particular cases 𝛟=𝛃\\boldsymbol{\\phi} = \\boldsymbol{\\beta} 𝛟=𝟎\\boldsymbol{\\phi} = \\mathbf{0}, respectively.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike information criterion — AIC.survstan","title":"Akaike information criterion — AIC.survstan","text":"Akaike information criterion","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike information criterion — AIC.survstan","text":"","code":"# S3 method for class 'survstan' AIC(object, ..., k = 2)"},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike information criterion — AIC.survstan","text":"object object class survstan. ... arguments passed methods. k numeric, penalty per parameter used; default k = 2 classical AIC.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike information criterion — AIC.survstan","text":"Akaike information criterion value single model passed function; otherwise, data.frame Akaike information criterion values number parameters returned.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Akaike information criterion — AIC.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) AIC(fit1, fit2, fit3) #>    fit       aic npars #> 1 fit1  29.21194     2 #> 2 fit2 200.72830     3 #> 3 fit3 202.16899     4 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/Gompertz.html","id":null,"dir":"Reference","previous_headings":"","what":"The Gompertz Distribution — Gompertz","title":"The Gompertz Distribution — Gompertz","text":"Probability function, distribution function, quantile function random generation  distribution parameters alpha gamma.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/Gompertz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Gompertz Distribution — Gompertz","text":"","code":"dgompertz(x, alpha = 1, gamma = 1, log = FALSE, ...)  pgompertz(q, alpha = 1, gamma = 1, lower.tail = TRUE, log.p = FALSE, ...)  qgompertz(p, alpha = 1, gamma = 1, lower.tail = FALSE, log.p = FALSE, ...)  rgompertz(n, alpha = 1, gamma = 1, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/Gompertz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Gompertz Distribution — Gompertz","text":"x vector (non-negative integer) quantiles. alpha shape parameter  distribution (alpha > 0). gamma scale parameter  distribution (gamma > 0). log, log.p logical; TRUE, probabilities p given log(p). ... arguments passed methods. q vector quantiles. lower.tail logical; TRUE (default), probabilities \\(P[X \\le x]\\); otherwise, \\(P[X > x]\\). p vector probabilities. n number random values return.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/Gompertz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Gompertz Distribution — Gompertz","text":"dgompertz gives (log) probability function, pgompertz gives (log) distribution function, qgompertz gives quantile function, rgompertz generates random deviates.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/Gompertz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Gompertz Distribution — Gompertz","text":"Probability density function: $$ f(x|\\alpha, \\gamma) = \\alpha\\gamma \\exp\\{\\gamma x - \\alpha(e^{\\gamma x} - 1)\\}I_{[0, \\infty)}(x), $$ \\(\\alpha>0\\) \\(\\gamma>0\\). Distribution function: $$ F(x|\\alpha, \\gamma) = 1 - \\exp\\{- \\alpha(e^{\\gamma x} - 1)\\}, $$ \\(x>0\\), \\(\\alpha>0\\) \\(\\gamma>0\\).","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Accelerated Failure Time Models — aftreg","title":"Fitting Accelerated Failure Time Models — aftreg","text":"Function fit accelerated failure time (AFT)  models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Accelerated Failure Time Models — aftreg","text":"","code":"aftreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Accelerated Failure Time Models — aftreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Accelerated Failure Time Models — aftreg","text":"aftreg returns object class \"aftreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Accelerated Failure Time Models — aftreg","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> aftreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Accelerated failure time model fit with weibull baseline distribution:  #>  #> Regression coefficients: #>         Estimate Std. Error z value Pr(>|z|) #> ecog.ps -0.38505    0.52698 -0.7307   0.4650 #> rx       0.52876    0.52920  0.9992   0.3177 #>  #> Baseline parameters: #>         Estimate Std. Error       2.5%     97.5% #> alpha    1.13144    0.28536    0.69016    1.8549 #> gamma  988.83418 1164.33904   98.36600 9940.3556 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Accelerated Hazard Models — ahreg","title":"Fitting Accelerated Hazard Models — ahreg","text":"Function fit accelerated hazard (AH) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Accelerated Hazard Models — ahreg","text":"","code":"ahreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Accelerated Hazard Models — ahreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Accelerated Hazard Models — ahreg","text":"ahreg returns object class \"ahreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Accelerated Hazard Models — ahreg","text":"","code":"# \\donttest{ library(survstan) fit <- ahreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> ahreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Accelerated hazard model fit with weibull baseline distribution:  #>  #> Regression coefficients: #>         Estimate Std. Error z value Pr(>|z|) #> ecog.ps  -3.3151     8.4290 -0.3933   0.6941 #> rx        4.5519    10.6107  0.4290   0.6679 #>  #> Baseline parameters: #>         Estimate Std. Error       2.5%     97.5% #> alpha    1.13140    0.28529    0.69021    1.8546 #> gamma  988.95076 1164.50442   98.37212 9942.0813 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"anova method for survstan models — anova.survstan","title":"anova method for survstan models — anova.survstan","text":"Compute analysis variance (deviance) tables one fitted model objects.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova method for survstan models — anova.survstan","text":"","code":"# S3 method for class 'survstan' anova(...)"},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"anova method for survstan models — anova.survstan","text":"... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"anova method for survstan models — anova.survstan","text":"ANOVA table.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova method for survstan models — anova.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) anova(fit1, fit2, fit3) #>  #> weibull(aft) 1: Surv(futime, fustat) ~ 1  #> weibull(aft) 2: Surv(futime, fustat) ~ rx  #> weibull(aft) 3: Surv(futime, fustat) ~ ecog.ps + rx  #> ---  #>                     loglik         LR df Pr(>Chi) #> weibull(aft) 1:  -12.60597 -168.95704  2   1.0000 #> weibull(aft) 2:  -97.36415    0.55931  1   0.4545 #> weibull(aft) 3:  -97.08449          -  -        - # }"},{"path":"https://fndemarqui.github.io/survstan/reference/bernstein.html","id":null,"dir":"Reference","previous_headings":"","what":"Bernstein polynomial — bernstein","title":"Bernstein polynomial — bernstein","text":"function used allow user specify arbitrary value polynomial's degree m. m = NULL, m = min(m_max, ceiling(n^0.4)) used, m_max = 15.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/bernstein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bernstein polynomial — bernstein","text":"","code":"bernstein(m = NULL)"},{"path":"https://fndemarqui.github.io/survstan/reference/bernstein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bernstein polynomial — bernstein","text":"m Bernstein polynomial's degree; default NULL.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/bernstein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bernstein polynomial — bernstein","text":"list baseline name polynomial's degree m.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated regression coefficients — coef.survstan","title":"Estimated regression coefficients — coef.survstan","text":"Estimated regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated regression coefficients — coef.survstan","text":"","code":"# S3 method for class 'survstan' coef(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated regression coefficients — coef.survstan","text":"object object class survstan ... arguments passed methods","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimated regression coefficients — coef.survstan","text":"estimated regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimated regression coefficients — coef.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) coef(fit) #>    ecog.ps         rx  #> -0.3850453  0.5287577  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for the regression coefficients — confint.survstan","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"Confidence intervals regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"","code":"# S3 method for class 'survstan' confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"object object class survstan. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"100(1-alpha) confidence intervals regression coefficients.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) confint(fit) #>               2.5%        97.5% #> ecog.ps -1.4179102    0.6478196 #> rx      -0.5084503    1.5659657 #> alpha    0.6901645    1.8548609 #> gamma   98.3660009 9940.3556003 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the crossing survival times — cross_time.survstan","title":"Computes the crossing survival times — cross_time.survstan","text":"Computes crossing survival times","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the crossing survival times — cross_time.survstan","text":"","code":"# S3 method for class 'survstan' cross_time(   object,   newdata1,   newdata2,   conf.level = 0.95,   nboot = 1000,   cores = 1,   ... )"},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the crossing survival times — cross_time.survstan","text":"object object class survstan newdata1 data frame containing first set explanatory variables newdata2 data frame containing second set explanatory variables conf.level level confidence/credible intervals nboot number bootstrap samples (default nboot=1000). cores number cores used bootstrap sampling; default 1 core; ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the crossing survival times — cross_time.survstan","text":"crossing survival time","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the crossing survival times — cross_time.survstan","text":"","code":"# \\donttest{ library(survstan) data(ipass) fit <- ypreg(Surv(time, status)~arm, data=ipass, baseline = \"weibull\") summary(fit) #> Call: #> ypreg(formula = Surv(time, status) ~ arm, data = ipass, baseline = \"weibull\") #>  #> Yang & Prentice model fit with weibull baseline distribution:  #>  #> Regression coefficients: #>            Estimate Std. Error  z value  Pr(>|z|)     #> short-arm  1.361063   0.182368   7.4633  8.44e-14 *** #> long-arm  -1.365391   0.082943 -16.4619 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Baseline parameters: #>       Estimate Std. Error     2.5%  97.5% #> alpha 1.846062   0.060577 1.731071 1.9687 #> gamma 6.961753   0.166121 6.643658 7.2951 #> ---  #> loglik = -2772.375   AIC = 5552.751  newdata1 <- data.frame(arm=0) newdata2 <- data.frame(arm=1) tcross <- cross_time(fit, newdata1, newdata2, nboot = 10) #> Please, be patient!!! #> Bootstrap samples draw using 1 core tcross #>       Est. 2.5% 97.5% #> 1 5.867165   NA    NA # }"},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method cross_time — cross_time","title":"Generic S3 method cross_time — cross_time","text":"Generic S3 method cross_time","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method cross_time — cross_time","text":"","code":"cross_time(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method cross_time — cross_time","text":"object fitted model object ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method cross_time — cross_time","text":"crossing survival time","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ehreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Extended Hazard Models — ehreg","title":"Fitting Extended Hazard Models — ehreg","text":"Function fit Extended Hazard (EH) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ehreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Extended Hazard Models — ehreg","text":"","code":"ehreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ehreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Extended Hazard Models — ehreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ehreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Extended Hazard Models — ehreg","text":"ehreg returns object class \"ehreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ehreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Extended Hazard Models — ehreg","text":"","code":"# \\donttest{ library(survstan) fit <- ehreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> ehreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Extended hazard model fit with weibull baseline distribution:  #>  #> Regression coefficients: #>            Estimate Std. Error z value Pr(>|z|) #> AF-ecog.ps  1.36330    0.98921  1.3782   0.1681 #> AF-rx      -1.21389    0.96329 -1.2601   0.2076 #> RH-ecog.ps -1.27129    1.40225 -0.9066   0.3646 #> RH-rx       1.46122    2.35451  0.6206   0.5349 #>  #> Baseline parameters: #>         Estimate Std. Error       2.5%     97.5% #> alpha    1.24544    0.47920    0.58588    2.6475 #> gamma 1265.53342 1026.11544  258.28865 6200.7171 #> ---  #> loglik = -96.76574   AIC = 205.5315  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/emmeans-survstan-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Support Functions for emmeans — emmeans-survstan-helpers","title":"Support Functions for emmeans — emmeans-survstan-helpers","text":"Functions required compatibility survstan emmeans. Users required call functions . Instead, called automatically emmeans function emmeans package.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/emmeans-survstan-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support Functions for emmeans — emmeans-survstan-helpers","text":"","code":"recover_data.survstan(object, ...)  recover_data.ypreg(object, term = c(\"short\", \"long\"), ...)  recover_data.ehreg(object, term = c(\"AF\", \"RH\"), ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/emmeans-survstan-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support Functions for emmeans — emmeans-survstan-helpers","text":"object object class supported new method. ... Additional parameters may supported method. term character specifying whether AF RH term regression coefficients used.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters estimates of a survstan model — estimates","title":"Parameters estimates of a survstan model — estimates","text":"Parameters estimates survstan model","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters estimates of a survstan model — estimates","text":"","code":"estimates(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters estimates of a survstan model — estimates","text":"object object class survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters estimates of a survstan model — estimates","text":"parameters estimates given survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameters estimates of a survstan model — estimates","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) estimates(fit) #>     ecog.ps          rx       alpha       gamma  #>  -0.3850453   0.5287577   1.1314412 988.8341760  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract AIC from a Fitted Model — extractAIC.survstan","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"Computes (generalized) Akaike Information Criterion fitted parametric model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"","code":"# S3 method for class 'survstan' extractAIC(fit, scale, k = 2, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"fit fitted model class survstan scale optional numeric specifying scale parameter model. Currently used \"lm\" method, scale specifies estimate error variance, scale = 0 indicates estimated maximum likelihood. k numeric specifying ‘weight’ equivalent degrees freedom part AIC formula. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"ANOVA table.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) extractAIC(fit1) #> [1]  2.00000 29.21194 extractAIC(fit2) #> [1]   3.0000 200.7283 extractAIC(fit3) #> [1]   4.000 202.169 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/gastric.html","id":null,"dir":"Reference","previous_headings":"","what":"Gastric cancer data set — gastric","title":"Gastric cancer data set — gastric","text":"Data set clinical trial conducted Gastrointestinal Tumor Study Group (GTSG) 1982. data set refers survival times patients locally nonresectable gastric cancer. Patients either treated chemotherapy combined radiation chemotherapy alone.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/gastric.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gastric cancer data set — gastric","text":"data frame 90 rows 3 variables: time: survival times (days) status: failure indicator (1 - failure; 0 - otherwise) trt: treatments (1 - chemotherapy + radiation; 0 - chemotherapy alone)","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/gastric.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gastric cancer data set — gastric","text":"Gastrointestinal Tumor Study Group. (1982) Comparison Combination Chemotherapy Combined Modality Therapy Locally Advanced Gastric Carcinoma. Cancer 49:1771-7.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/gastric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gastric cancer data set — gastric","text":"Fabio N. Demarqui fndemarqui@est.ufmg.br","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggprentice.html","id":null,"dir":"Reference","previous_headings":"","what":"The Generalized Gamma Distribution (Prentice's alternative parametrization) — ggprentice","title":"The Generalized Gamma Distribution (Prentice's alternative parametrization) — ggprentice","text":"Probability function, distribution function, quantile function random generation  distribution parameters mu, sigma varphi.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggprentice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Generalized Gamma Distribution (Prentice's alternative parametrization) — ggprentice","text":"","code":"dggprentice(x, mu, sigma, varphi, log = FALSE)  pggprentice(q, mu = 0, sigma = 1, varphi, lower.tail = TRUE, log.p = FALSE)  qggprentice(p, mu = 0, sigma = 1, varphi, lower.tail = TRUE, log.p = FALSE)  rggprentice(n, mu = 0, sigma = 1, varphi, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ggprentice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Generalized Gamma Distribution (Prentice's alternative parametrization) — ggprentice","text":"x vector (non-negative integer) quantiles. mu location parameter distribution. sigma scale parameter distribution (sigma > 0). varphi shape parameter distribution. log, log.p logical; TRUE, probabilities p given log(p). q vector quantiles. lower.tail logical; TRUE (default), probabilities \\(P[X \\le x]\\); otherwise, \\(P[X > x]\\). p vector probabilities. n number random values return. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggprentice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Generalized Gamma Distribution (Prentice's alternative parametrization) — ggprentice","text":"dggprentice gives (log) probability function, pggprentice gives (log) distribution function, qggprentice gives quantile function, rggprentice generates random deviates.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggprentice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Generalized Gamma Distribution (Prentice's alternative parametrization) — ggprentice","text":"Probability density function: $$ f(x | \\mu, \\sigma, \\varphi) = \\begin{cases} \\frac{|\\varphi|(\\varphi^{-2})^{\\varphi^{-2}}}{\\sigma x\\Gamma(\\varphi^{-2})}\\exp\\{\\varphi^{-2}[\\varphi w - \\exp(\\varphi w)]\\}I_{[0, \\infty)}(x), & \\varphi \\neq 0 \\\\ \\frac{1}{\\sqrt{2\\pi}x\\sigma}\\exp\\left\\{-\\frac{1}{2}\\left(\\frac{log(x)-\\mu}{\\sigma}\\right)^2\\right\\}I_{[0, \\infty)}(x), & \\varphi = 0 \\end{cases}  $$ \\(w = \\frac{\\log(x) - \\mu}{\\sigma}\\), \\(-\\infty < \\mu < \\infty\\), \\(\\sigma>0\\) \\(-\\infty < \\varphi < \\infty\\). Distribution function: $$ F(x|\\mu, \\sigma, \\varphi) =  \\begin{cases} F_{G}(y|1/\\varphi^2, 1), & \\varphi > 0 \\\\ 1-F_{G}(y|1/\\varphi^2, 1), & \\varphi < 0 \\\\ F_{LN}(x|\\mu, \\sigma), & \\varphi = 0 \\end{cases} $$ \\(y = \\displaystyle\\left(\\frac{x}{\\sigma}\\right)^\\varphi\\), \\(F_{G}(\\cdot|\\nu, 1)\\) distribution function gamma distribution shape parameter \\(1/\\varphi^2\\) scale parameter equals 1, \\(F_{LN}(x|\\mu, \\sigma)\\) corresponds distribution function lognormal distribution location parameter \\(\\mu\\) scale parameter \\(\\sigma\\).","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method ggresiduals — ggresiduals","title":"Generic S3 method ggresiduals — ggresiduals","text":"Generic S3 method ggresiduals","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method ggresiduals — ggresiduals","text":"","code":"ggresiduals(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method ggresiduals — ggresiduals","text":"object fitted model object. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method ggresiduals — ggresiduals","text":"desired residual plot.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic S3 method ggresiduals — ggresiduals","text":"Generic method plot residuals survival models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"ggresiduals method for survstan models — ggresiduals.survstan","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"ggresiduals method survstan models","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"","code":"# S3 method for class 'survstan' ggresiduals(object, type = c(\"coxsnell\", \"martingale\", \"deviance\"), ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"object fitted model object class survstan. type type residuals used plot: coxsnell (default), martingale deviance. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"desired residual plot.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"function produces residuals plots Cox-Snell residuals, martingale residuals deviance residuals.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"","code":"# \\donttest{ library(survstan) ovarian$rx <- as.factor(ovarian$rx) fit <- aftreg(Surv(futime, fustat) ~ age + rx, data = ovarian, baseline = \"weibull\", init = 0) ggresiduals(fit, type = \"coxsnell\")  ggresiduals(fit, type = \"martingale\") #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'  ggresiduals(fit, type = \"deviance\")  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/ggstacy.html","id":null,"dir":"Reference","previous_headings":"","what":"The Generalized Gamma Distribution (Stacy's original parametrization) — ggstacy","title":"The Generalized Gamma Distribution (Stacy's original parametrization) — ggstacy","text":"Probability function, distribution function, quantile function random generation  distribution parameters alpha, gamma kappa.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggstacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Generalized Gamma Distribution (Stacy's original parametrization) — ggstacy","text":"","code":"dggstacy(x, alpha, gamma, kappa, log = FALSE)  pggstacy(q, alpha, gamma, kappa, log.p = FALSE, lower.tail = TRUE)  qggstacy(   p,   alpha = 1,   gamma = 1,   kappa = 1,   log.p = FALSE,   lower.tail = TRUE,   ... )  rggstacy(n, alpha = 1, gamma = 1, kappa = 1, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ggstacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Generalized Gamma Distribution (Stacy's original parametrization) — ggstacy","text":"x vector (non-negative integer) quantiles. alpha shape parameter  distribution (alpha > 0). gamma scale parameter  distribution (gamma > 0). kappa shape parameter  distribution (kappa > 0). log, log.p logical; TRUE, probabilities p given log(p). q vector quantiles. lower.tail logical; TRUE (default), probabilities \\(P[X \\le x]\\); otherwise, \\(P[X > x]\\). p vector probabilities. ... arguments passed methods. n number random values return.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggstacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Generalized Gamma Distribution (Stacy's original parametrization) — ggstacy","text":"dggstacy gives (log) probability function, pggstacy gives (log) distribution function, qggstacy gives quantile function, rggstacy generates random deviates.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggstacy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Generalized Gamma Distribution (Stacy's original parametrization) — ggstacy","text":"Probability density function: $$ f(x|\\alpha, \\gamma, \\kappa) = \\frac{\\kappa}{\\gamma^{\\alpha}\\Gamma(\\alpha/\\kappa)}x^{\\alpha-1}\\exp\\left\\{-\\left(\\frac{x}{\\gamma}\\right)^{\\kappa}\\right\\}I_{[0, \\infty)}(x), $$ \\(\\alpha>0\\), \\(\\gamma>0\\) \\(\\kappa>0\\). Distribution function: $$ F(t|\\alpha, \\gamma, \\kappa) = F_{G}(x|\\nu, 1), $$ \\(x = \\displaystyle\\left(\\frac{t}{\\gamma}\\right)^\\kappa\\), \\(F_{G}(\\cdot|\\nu, 1)\\) corresponds distribution function gamma distribution shape parameter \\(\\nu = \\alpha/\\gamma\\) scale parameter equals 1.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ipass.html","id":null,"dir":"Reference","previous_headings":"","what":"IRESSA Pan-Asia Study (IPASS) data set — ipass","title":"IRESSA Pan-Asia Study (IPASS) data set — ipass","text":"Reconstructed IPASS clinical trial data reported Argyropoulos Unruh (2015). Although reconstructed, data set preserves features exhibited references full access observations clinical trial. data base related period March 2006 April 2008. main purpose study compare drug gefitinib carboplatin/paclitaxel doublet chemotherapy first line treatment, terms progression free survival (months), applied selected non-small-cell lung cancer (NSCLC) patients.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ipass.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IRESSA Pan-Asia Study (IPASS) data set — ipass","text":"data frame 1217 rows 3 variables: time: progression free survival (months) status: failure indicator (1 - failure; 0 - otherwise) arm: (1 - gefitinib; 0 - carboplatin/paclitaxel doublet chemotherapy)","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ipass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"IRESSA Pan-Asia Study (IPASS) data set — ipass","text":"Argyropoulos, C. Unruh, M. L. (2015). Analysis time event outcomes randomized controlled trials generalized additive models. PLOS One 10, 1-33.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ipass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"IRESSA Pan-Asia Study (IPASS) data set — ipass","text":"Fabio N. Demarqui fndemarqui@est.ufmg.br","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"Extracts log-likelihood function fitted parametric model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"","code":"# S3 method for class 'survstan' logLik(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"object fitted model class survstan ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"log-likelihood value single model passed function; otherwise, data.frame log-likelihood values number parameters returned.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) logLik(fit1, fit2, fit3) #>    fit    loglik npars #> 1 fit1 -12.60597     2 #> 2 fit3 -97.08449     4 #> 3 fit2 -97.36415     3 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Model.matrix method for survstan models — model.matrix.survstan","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"Reconstruct model matrix survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"","code":"# S3 method for class 'survstan' model.matrix(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"object object class survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"model matrix (matrices) fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) model.matrix(fit) #>    ecog.ps rx #> 1        1  1 #> 2        1  1 #> 3        2  1 #> 4        1  2 #> 5        1  1 #> 6        2  1 #> 7        2  2 #> 8        2  2 #> 9        1  1 #> 10       2  2 #> 11       2  1 #> 12       1  2 #> 13       2  2 #> 14       1  2 #> 15       1  1 #> 16       2  1 #> 17       2  1 #> 18       1  1 #> 19       1  2 #> 20       1  2 #> 21       2  2 #> 22       2  1 #> 23       1  1 #> 24       2  2 #> 25       1  2 #> 26       1  2 #> attr(,\"assign\") #> [1] 1 2 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/pehaz.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard and cumulative hazard functions of the PE distribution — pehaz","title":"Hazard and cumulative hazard functions of the PE distribution — pehaz","text":"Hazard cumulative hazard functions PE distribution","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/pehaz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard and cumulative hazard functions of the PE distribution — pehaz","text":"","code":"hpexp(x, rho, rates)  Hpexp(x, rho, rates)"},{"path":"https://fndemarqui.github.io/survstan/reference/pehaz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard and cumulative hazard functions of the PE distribution — pehaz","text":"x vector time points. rho vector time grid knots. rates vector failure rates.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/pehaz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hazard and cumulative hazard functions of the PE distribution — pehaz","text":"hpexp gives hazard function Hpexp gives cumulative hazard function PE distribution.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/pexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability function, distribution function, quantile function and random generation for the Piecewise Exponential (PE) distribution. — pexp","title":"Probability function, distribution function, quantile function and random generation for the Piecewise Exponential (PE) distribution. — pexp","text":"Probability function, distribution function, quantile function random generation Piecewise Exponential (PE) distribution.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/pexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability function, distribution function, quantile function and random generation for the Piecewise Exponential (PE) distribution. — pexp","text":"","code":"dpexp(x, rho, rates, log = FALSE)  ppexp(q, rho, rates, lower.tail = TRUE, log.p = FALSE)  qpexp(p, rho, rates, lower.tail = TRUE, log.p = FALSE)  rpexp(n, rho, rates)"},{"path":"https://fndemarqui.github.io/survstan/reference/pexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability function, distribution function, quantile function and random generation for the Piecewise Exponential (PE) distribution. — pexp","text":"x vector time points. rho vector time grid knots. rates vector failure rates. log, log.p logical; TRUE, probabilities p given log(p). q vector quantiles. lower.tail logical; TRUE (default), probabilities \\(P[X \\le x]\\); otherwise, \\(P[X > x]\\). p vector probabilities. n number random values return.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/pexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability function, distribution function, quantile function and random generation for the Piecewise Exponential (PE) distribution. — pexp","text":"dpexp gives (log) probability function, ppexp gives (log) distribution function, qpexp gives quantile function, rpexp generates random deviates.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/pexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability function, distribution function, quantile function and random generation for the Piecewise Exponential (PE) distribution. — pexp","text":"","code":"n <- 10 rho <- c(0, 1, 3, 7, Inf) rates <- c(0.5, 4, 0.8, 0.1) x <- sort(rpexp(n, rho=rho, rates=rates)) Fx <- ppexp(x, rho, rates) y <- qpexp(Fx, rho, rates) # checking: x==y #>  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Proportional Hazards Models — phreg","title":"Fitting Proportional Hazards Models — phreg","text":"Function fit proportional hazards (PH) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Proportional Hazards Models — phreg","text":"","code":"phreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Proportional Hazards Models — phreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Proportional Hazards Models — phreg","text":"phreg returns object class \"phreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Proportional Hazards Models — phreg","text":"","code":"# \\donttest{ library(survstan) fit <- phreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> phreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Proportional hazards model fit with weibull baseline distribution:  #>  #> Regression coefficients: #>         Estimate Std. Error z value Pr(>|z|) #> ecog.ps  0.43563    0.58727  0.7418   0.4582 #> rx      -0.59811    0.58823 -1.0168   0.3093 #>  #> Baseline parameters: #>         Estimate Std. Error       2.5%     97.5% #> alpha    1.13138    0.28535    0.69012    1.8548 #> gamma  988.99454 1164.58729   98.37037 9943.1386 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/piecewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Piecewise baseline — piecewise","title":"Piecewise baseline — piecewise","text":"function used allow user specify piecewise exponential baseline arbitrary time grid/number intervals.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/piecewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Piecewise baseline — piecewise","text":"","code":"piecewise(rho = NULL, m = NULL)"},{"path":"https://fndemarqui.github.io/survstan/reference/piecewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Piecewise baseline — piecewise","text":"rho specified time grid; default NULL. m number intervals; default NULL.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/piecewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Piecewise baseline — piecewise","text":"list baseline name, provided time grid number intervals.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Proportional Odds Models — poreg","title":"Fitting Proportional Odds Models — poreg","text":"Function fit proportional odds (PO) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Proportional Odds Models — poreg","text":"","code":"poreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Proportional Odds Models — poreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Proportional Odds Models — poreg","text":"poreg returns object class \"poreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Proportional Odds Models — poreg","text":"","code":"# \\donttest{ library(survstan) fit <- poreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> poreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Proportional odds model fit with weibull baseline distribution:  #>  #> Regression coefficients: #>         Estimate Std. Error z value Pr(>|z|) #> ecog.ps  0.81190    0.71810  1.1306   0.2582 #> rx      -0.69296    0.71685 -0.9667   0.3337 #>  #> Baseline parameters: #>         Estimate Std. Error       2.5%     97.5% #> alpha    1.18318    0.36436    0.64703    2.1636 #> gamma 1340.62000 1086.20339  273.93102 6561.0022 #> ---  #> loglik = -97.03918   AIC = 202.0784  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the summary.survstan output — print.summary.survstan","title":"Print the summary.survstan output — print.summary.survstan","text":"Produces printed summary fitted survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the summary.survstan output — print.summary.survstan","text":"","code":"# S3 method for class 'summary.survstan' print(x, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the summary.survstan output — print.summary.survstan","text":"x object class summary.survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the summary.survstan output — print.summary.survstan","text":"return value, called side effects.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank a collection of survstan models — rank_models","title":"Rank a collection of survstan models — rank_models","text":"Rank collection survstan models","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank a collection of survstan models — rank_models","text":"","code":"rank_models(formula, data, survreg, baseline, dist = NULL, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank a collection of survstan models — rank_models","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. survreg survival regression models fitted (AFT, AH, PH, PO, YP EH). baseline baseline distributions fitted; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distributions (compability survreg function); default NULL. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank a collection of survstan models — rank_models","text":"tibble containing fitted models ranked according AICs.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank a collection of survstan models — rank_models","text":"","code":"# \\donttest{ library(survstan) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  veteran <- veteran %>%   mutate(across(c(trt, prior, celltype), as.factor)) fits <- rank_models(   formula = Surv(time, status) ~ celltype+karno,   data = veteran,   survreg = c(\"aftreg\", \"ahreg\", \"phreg\", \"poreg\", \"ypreg\", \"ehreg\"),   baseline = c(\"exponential\", \"weibull\", \"lognormal\", \"loglogistic\") ) #> Warning: There was 1 warning in `dplyr::mutate()`. #> ℹ In argument: `fit = purrr::pmap(...)`. #> Caused by warning in `ahreg()`: #> ! The AH model with baseline exponential distribution is non-identifiable! Please, choose another baseline distribution. # }"},{"path":"https://fndemarqui.github.io/survstan/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics tidy","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"residuals method for survstan models — residuals.survstan","title":"residuals method for survstan models — residuals.survstan","text":"residuals method survstan models","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"residuals method for survstan models — residuals.survstan","text":"","code":"# S3 method for class 'survstan' residuals(object, type = c(\"coxsnell\", \"martingale\", \"deviance\"), ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"residuals method for survstan models — residuals.survstan","text":"object fitted model object class survstan. type type residuals desired: coxsnell (default), martingale deviance. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"residuals method for survstan models — residuals.survstan","text":"vector containing desired residuals.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"residuals method for survstan models — residuals.survstan","text":"function extracts residuals, martingale residuals deviance residuals survstan object.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"residuals method for survstan models — residuals.survstan","text":"","code":"# \\donttest{ library(survstan) ovarian$rx <- as.factor(ovarian$rx) fit <- aftreg(Surv(futime, fustat) ~ age + rx, data = ovarian, baseline = \"weibull\", init = 0) residuals(fit, type = \"coxsnell\") #>          1          2          3          4          5          6          7  #> 0.10688361 0.48993205 0.26908236 0.08873277 0.16806224 0.43241247 0.17686609  #>          8          9         10         11         12         13         14  #> 0.28063085 1.47404617 0.19518977 0.86115946 0.15636767 0.65177670 0.45113772  #>         15         16         17         18         19         20         21  #> 0.10611859 0.20681060 0.16076382 0.40804195 0.57536345 0.16099606 1.51372713  #>         22         23         24         25         26  #> 2.28089328 0.03657446 0.26538744 0.33530877 0.14774074  residuals(fit, type = \"martingale\") #>           1           2           3           4           5           6  #>  0.89311639  0.51006795  0.73091764 -0.08873277  0.83193776 -0.43241247  #>           7           8           9          10          11          12  #>  0.82313391  0.71936915 -1.47404617  0.80481023  0.13884054 -0.15636767  #>          13          14          15          16          17          18  #> -0.65177670 -0.45113772 -0.10611859 -0.20681060 -0.16076382 -0.40804195  #>          19          20          21          22          23          24  #> -0.57536345 -0.16099606 -1.51372713 -1.28089328  0.96342554  0.73461256  #>          25          26  #>  0.66469123 -0.14774074  residuals(fit, type = \"deviance\") #>          1          2          3          4          5          6          7  #>  1.6388401  0.6378411  1.0787216 -0.4212666  1.3794804 -0.9299596  1.3485018  #>          8          9         10         11         12         13         14  #>  1.0500914 -1.7170010  1.2876123  0.1458427 -0.5592275 -1.1417326 -0.9498818  #>         15         16         17         18         19         20         21  #> -0.4606921 -0.6431339 -0.5670341 -0.9033736 -1.0727194 -0.5674435 -1.7399581  #>         22         23         24         25         26  #> -0.9553283  2.1656313  1.0880735  0.9252159 -0.5435821  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/se.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method se — se","title":"Generic S3 method se — se","text":"Generic S3 method se","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method se — se","text":"","code":"se(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method se — se","text":"object fitted model object. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method se — se","text":"standard errors associated set parameter estimators given model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated standard errors — se.survstan","title":"Estimated standard errors — se.survstan","text":"Estimated standard errors","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated standard errors — se.survstan","text":"","code":"# S3 method for class 'survstan' se(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated standard errors — se.survstan","text":"object object class survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimated standard errors — se.survstan","text":"vector standard errors.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimated standard errors — se.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) se(fit) #>   ecog.ps        rx  #> 0.5269816 0.5291975  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for a survstan object — summary.survstan","title":"Summary for a survstan object — summary.survstan","text":"Summary survstan object","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for a survstan object — summary.survstan","text":"","code":"# S3 method for class 'survstan' summary(object, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for a survstan object — summary.survstan","text":"object result call summary.survstan conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for a survstan object — summary.survstan","text":"object class summary.survstan containing summary fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"survfit method for survstan models — survfit.survstan","title":"survfit method for survstan models — survfit.survstan","text":"Computes predicted survivor function phpe model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survfit method for survstan models — survfit.survstan","text":"","code":"# S3 method for class 'survstan' survfit(formula, newdata = NULL, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survfit method for survstan models — survfit.survstan","text":"formula object class survstan newdata data frame containing set explanatory variables; NULL, data.frame observed failure times corresponding estimated baseline survivals returned. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"survfit method for survstan models — survfit.survstan","text":"data.frame containing estimated survival probabilities.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"survfit method for survstan models — survfit.survstan","text":"","code":"# \\donttest{ library(survstan) library(ggplot2) data(ipass) ipass$arm <- as.factor(ipass$arm) fit <- ypreg(Surv(time, status)~arm, data=ipass, baseline = \"weibull\") summary(fit) #> Call: #> ypreg(formula = Surv(time, status) ~ arm, data = ipass, baseline = \"weibull\") #>  #> Yang & Prentice model fit with weibull baseline distribution:  #>  #> Regression coefficients: #>             Estimate Std. Error  z value  Pr(>|z|)     #> short-arm1  1.361063   0.182368   7.4633  8.44e-14 *** #> long-arm1  -1.365391   0.082943 -16.4619 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Baseline parameters: #>       Estimate Std. Error     2.5%  97.5% #> alpha 1.846062   0.060577 1.731071 1.9687 #> gamma 6.961753   0.166121 6.643658 7.2951 #> ---  #> loglik = -2772.375   AIC = 5552.751  newdata <- data.frame(arm=as.factor(0:1)) surv <- survfit(fit, newdata) ggplot(surv, aes(x=time, y=surv, color = arm)) +   geom_line()  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/survstan-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'survstan' package. — survstan-package","title":"The 'survstan' package. — survstan-package","text":"aim R package survstan provide toolkit fitting survival models using Stan. R package survstan can used fit right-censored survival data independent censoring. implemented models allow fitting survival data presence/absence covariates. inferential procedures currently based maximum likelihood (ML) approach. _PACKAGE","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survstan-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'survstan' package. — survstan-package","text":"Stan Development Team (2023). “RStan: R interface Stan.” R package version 2.21.8, https://mc-stan.org/. Lawless JF (2002). Statistical Models Methods Lifetime Data,  Wiley Series Probability Statistics, 2nd Edition edition. John Wiley Sons. ISBN 9780471372158. Bennett S (1983). “Analysis survival data proportional odds model.” Statistics Medicine, 2(2), 273-277. doi:10.1002/sim.4780020223 . Chen YQ, Wang M (2000). “Analysis Accelerated Hazards Models.” Journal American Statistical Association, 95(450), 608-618. doi:10.1080/01621459.2000.10474236 . Demarqui FN, Mayrink VD (2021). “Yang Prentice model piecewise exponential baseline distribution modeling lifetime data crossing survival curves.” Brazilian Journal Probability Statistics, 35(1), 172 – 186. doi:10.1214/20-BJPS471 .","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a survstan object — tidy.survstan","title":"Tidy a survstan object — tidy.survstan","text":"Tidy survstan object","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a survstan object — tidy.survstan","text":"","code":"# S3 method for class 'survstan' tidy(x, conf.int = FALSE, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a survstan object — tidy.survstan","text":"x fitted model object. conf.int Logical indicating whether include confidence interval tidied output. Defaults FALSE. conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a survstan object — tidy.survstan","text":"tibble summary fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy a survstan object — tidy.survstan","text":"Convert fitted model tibble.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy a survstan object — tidy.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") tidy(fit) #> # A tibble: 2 × 5 #>   term     estimate std.error statistic  p.value #>   <chr>       <dbl>     <dbl>     <dbl>    <dbl> #> 1 ecog.ps -0.385045  0.526982 -0.730662 0.464986 #> 2 rx       0.528758  0.529197  0.999169 0.317713 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Time grid — time_grid","title":"Time grid — time_grid","text":"Time grid","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time grid — time_grid","text":"","code":"time_grid(time, event, m = NULL)"},{"path":"https://fndemarqui.github.io/survstan/reference/time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time grid — time_grid","text":"time Vector failure times event Vector failure indicators m Optional. Number intervals. NULL, number intervals set equal number distinct observed failure times.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/time_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time grid — time_grid","text":"Time grid.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-covariance matrix — vcov.survstan","title":"Variance-covariance matrix — vcov.survstan","text":"function extracts returns variance-covariance matrix associated regression coefficients maximum likelihood estimation approach used model fitting.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance-covariance matrix — vcov.survstan","text":"","code":"# S3 method for class 'survstan' vcov(object, all = FALSE, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance-covariance matrix — vcov.survstan","text":"object object class survstan. logical; FALSE (default), covariance matrix associated regression coefficients returned; TRUE, full covariance matrix returned. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance-covariance matrix — vcov.survstan","text":"variance-covariance matrix associated parameters estimators.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance-covariance matrix — vcov.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) vcov(fit) #>           ecog.ps        rx #> ecog.ps 0.2777096 0.0110424 #> rx      0.0110424 0.2800500 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Yang and Prentice Models — ypreg","title":"Fitting Yang and Prentice Models — ypreg","text":"Function fit Yang Prentice (YP) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Yang and Prentice Models — ypreg","text":"","code":"ypreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Yang and Prentice Models — ypreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Yang and Prentice Models — ypreg","text":"ypreg returns object class \"ypreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Yang and Prentice Models — ypreg","text":"","code":"# \\donttest{ library(survstan) fit <- ypreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> ypreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Yang & Prentice model fit with weibull baseline distribution:  #>  #> Regression coefficients: #>               Estimate Std. Error z value Pr(>|z|) #> short-ecog.ps  1.36330    0.98921  1.3782   0.1681 #> short-rx      -1.21389    0.96329 -1.2601   0.2076 #> long-ecog.ps  -1.27129    1.40225 -0.9066   0.3646 #> long-rx        1.46122    2.35451  0.6206   0.5349 #>  #> Baseline parameters: #>         Estimate Std. Error       2.5%     97.5% #> alpha    1.24544    0.47920    0.58588    2.6475 #> gamma 1265.53342 1026.11544  258.28865 6200.7171 #> ---  #> loglik = -96.76574   AIC = 205.5315  # }"},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-001","dir":"Changelog","previous_headings":"","what":"survstan 0.0.1","title":"survstan 0.0.1","text":"CRAN release: 2023-05-04 Added NEWS.md file track changes package.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-002","dir":"Changelog","previous_headings":"","what":"survstan 0.0.2","title":"survstan 0.0.2","text":"CRAN release: 2023-06-09 Implementation Yang Prentice (YP) model dealing survival data possibly crossing survival curves. Implementation survfit.survstan method implemented models. Improvement output anova.survstan function: now chosen regression model baseline distribution displayed ANOVA table. Addition dist argument model fitting functions (aftreg(), ahreg(), phreg(), poreg() ypreg()) alternative way specify baseline distribution (compability survival::survreg() function). Addition init argument model fitting functions (aftreg(), ahreg(), phreg(), poreg() ypreg()) default value equals 0 fix initial starting values calling rstan::optimizing() function. Addition extractAIC.survstan method required stats::step() function carrying model selection via stepwise procedures. Addition logLik.survstan method extract log-likelihood value fitted model. AIC.survstan method now returns data.frame aic values along corresponding number model parameters one fit passed method. Addition gastric ipass datasets.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-003","dir":"Changelog","previous_headings":"","what":"survstan 0.0.3","title":"survstan 0.0.3","text":"CRAN release: 2023-08-09 Weibull distribution now default baseline distribution (replacing exponential distribution previous versions). Implementation Birnbaum-Saunders (fatigue) distribution. Implementation function rank_models rank survstan models according AICs.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-004","dir":"Changelog","previous_headings":"","what":"survstan 0.0.4","title":"survstan 0.0.4","text":"CRAN release: 2023-09-21 survstan package now requires rstan version 2.26.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-005","dir":"Changelog","previous_headings":"","what":"survstan 0.0.5","title":"survstan 0.0.5","text":"CRAN release: 2023-12-18 Inclusion emmeans method survstan models. Implementation gamma Rayleigh distributions. Implementation se method computation standard errors. Correction covariance matrix positive parameters. Application delta method avoid negative lower bounds confidence intervals positive parameters. Bug correction implementation survival functions.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-006","dir":"Changelog","previous_headings":"","what":"survstan 0.0.6","title":"survstan 0.0.6","text":"CRAN release: 2024-01-18 update summary output. tidy.survstan method reimplemented follow broom stantards, survstan::tidy() long masks broom::tidy(). cross_time() function now allows parallel computing. reparametrization AH model (see details https://fndemarqui.github.io/survstan/). implementation extended hazard (EH) family survival regression models.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-0061","dir":"Changelog","previous_headings":"","what":"survstan 0.0.6.1","title":"survstan 0.0.6.1","text":"CRAN release: 2024-02-05 Correcting parametrization survival functions AH EH models.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-007","dir":"Changelog","previous_headings":"","what":"survstan 0.0.7","title":"survstan 0.0.7","text":"CRAN release: 2024-03-20 implemented models now can accommodate offset variable linear predictors. Implementation Gompertz generalized gamma (original Stacy’s parametrization alternative Prentice’s parametrization) distributions.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-0071","dir":"Changelog","previous_headings":"","what":"survstan 0.0.7.1","title":"survstan 0.0.7.1","text":"CRAN release: 2024-04-12 survfit.survstan method now returns data.frame observed survival times corresponding estimated baseline survivals newdata = NULL.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-010","dir":"Changelog","previous_headings":"","what":"survstan 0.1.0","title":"survstan 0.1.0","text":"implementation baseline hazard function approximated via Bernstein polynomials. inclusion piecewiese exponential distribution (currently available PH, PO YP regression models). use Matrix::nearPD function ensure covariance function positive definite.","code":""}]
