[{"path":"https://fndemarqui.github.io/survstan/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 survstan authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fndemarqui.github.io/survstan/articles/LRT.html","id":"ipass-data","dir":"Articles","previous_headings":"","what":"Ipass data","title":"Likelihood ratio tests with the survstan package","text":"survstan::ipass data illustrates real situation presence crossing survival curves. case, PH PO models inadequate, YP model considered data analysis.  Since YP models includes PH PO models particular cases, can perform LRT follows:","code":"data(ipass) glimpse(ipass) #> Rows: 1,217 #> Columns: 3 #> $ time   <dbl> 0.102703, 0.102703, 0.102703, 0.205483, 0.376758, 0.376758, 0.3… #> $ status <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ arm    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …  ipass <- ipass %>%   mutate(     arm = as.factor(ipass$arm),      arm = ifelse(arm == 1, \"gefitinib\", \"carboplatin/paclitaxel\")   )  km <- survfit(Surv(time, status) ~ arm, data = ipass) ggsurv(km) ph <- phreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\") po <- poreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\") yp <- ypreg(Surv(time, status)~arm, data=ipass, dist = \"weibull\")   anova(ph, yp) #>  #> weibull(ph) 1: Surv(time, status) ~ arm  #> weibull(yp) 2: Surv(time, status) ~ arm  #> ---  #>                  loglik       LR df  Pr(>Chi)     #> weibull(ph) 1: -2839.24   133.72  1 < 2.2e-16 *** #> weibull(yp) 2: -2772.38        -  -         -     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 anova(po, yp) #>  #> weibull(po) 1: Surv(time, status) ~ arm  #> weibull(yp) 2: Surv(time, status) ~ arm  #> ---  #>                  loglik       LR df  Pr(>Chi)     #> weibull(po) 1: -2851.32   157.89  1 < 2.2e-16 *** #> weibull(yp) 2: -2772.38        -  -         -     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://fndemarqui.github.io/survstan/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fabio Demarqui. Author, maintainer, copyright holder.","code":""},{"path":"https://fndemarqui.github.io/survstan/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Demarqui F (2023). survstan: Fitting Survival Regression Models via 'Stan'. R package version 0.0.5,  https://fndemarqui.github.io/survstan/, https://github.com/fndemarqui/survstan.","code":"@Manual{,   title = {survstan: Fitting Survival Regression Models via 'Stan'},   author = {Fabio Demarqui},   year = {2023},   note = {R package version 0.0.5,  https://fndemarqui.github.io/survstan/},   url = {https://github.com/fndemarqui/survstan}, }"},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"survstan","dir":"","previous_headings":"","what":"Fitting Survival Regression Models via Stan ","title":"Fitting Survival Regression Models via Stan ","text":"R package survstan can used fit right-censored survival data independent censoring. implemented models allow fitting survival data presence/absence covariates. inferential procedures currently based maximum likelihood (ML) approach.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fitting Survival Regression Models via Stan ","text":"can install released version survstan CRAN : can install development version survstan GitHub :","code":"install.packages(\"survstan\") # install.packages(\"devtools\") devtools::install_github(\"fndemarqui/survstan\")"},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"inference-procedures","dir":"","previous_headings":"","what":"Inference procedures","title":"Fitting Survival Regression Models via Stan ","text":"Let (ti,δi) observed survival time corresponding failure indicator,  = 1, ⋯, n, θ k × 1 vector parameters. , likelihood function right-censored survival data independent censoring can expressed : $$ L(\\boldsymbol{\\theta}) = \\prod_{=1}^{n}f(t_{}|\\boldsymbol{\\theta})^{\\delta_{}}S(t_{}|\\boldsymbol{\\theta})^{1-\\delta_{}}. $$ maximum likelihood estimate (MLE) θ obtained directly maximization log (L(θ)) using rstan::optimizing() function. function rstan::optimizing() provides hessian matrix log (L(θ)), needed obtain observed Fisher information matrix, given : $$         \\mathscr{}(\\hat{\\boldsymbol{\\theta}}) = -\\frac{\\partial^2}{\\partial \\boldsymbol{\\theta}\\boldsymbol{\\theta}'} \\log L(\\boldsymbol{\\theta})\\mid_{\\boldsymbol{\\theta}=\\hat{\\boldsymbol{\\theta}}}, $$ Inferences θ based asymptotic properties MLE, $\\hat{\\boldsymbol{\\theta}}$, state : $$ \\hat{\\boldsymbol{\\theta}} \\asymp N_{k}(\\boldsymbol{\\theta}, \\mathscr{}^{-1}(\\hat{\\boldsymbol{\\theta}})). $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"baseline-distributions","dir":"","previous_headings":"","what":"Baseline Distributions","title":"Fitting Survival Regression Models via Stan ","text":"popular baseline survival distributions implemented R package survstan. distributions include: Exponential Weibull Lognormal Loglogistic Gamma Rayleigh Birnbaum-Saunders (fatigue) parametrizations adopted package survstan presented next.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"exponential-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Exponential Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ Exp(λ), f(t|λ) = λexp {−λt}[0, ∞)(t), λ > 0 rate parameter. survival hazard functions case given : S(t|λ) = exp {−λt} h(t|λ) = λ.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"weibull-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Weibull Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ Weibull(α,γ), $$ f(t|\\alpha, \\gamma) = \\frac{\\alpha}{\\gamma^{\\alpha}}t^{\\alpha-1}\\exp\\left\\{-\\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right\\}I_{[0, \\infty)}(t), $$ α > 0 γ > 0 shape scale parameters, respectively. survival hazard functions case given : $$         S(t|\\alpha, \\gamma) = \\exp\\left\\{-\\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right\\} $$ $$         h(t|\\alpha, \\gamma) = \\frac{\\alpha}{\\gamma^{\\alpha}}t^{\\alpha-1}. $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"lognormal-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Lognormal Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ LN(μ,σ), $$ f(t|\\mu, \\sigma) = \\frac{1}{\\sqrt{2\\pi}t\\sigma}\\exp\\left\\{-\\frac{1}{2}\\left(\\frac{log(t)-\\mu}{\\sigma}\\right)^2\\right\\}I_{[0, \\infty)}(t), $$  − ∞ < μ < ∞ σ > 0 mean standard deviation log scale T. survival hazard functions case given : $$S(t|\\mu, \\sigma) = \\Phi\\left(\\frac{-log(t)+\\mu}{\\sigma}\\right)$$ $$h(t|\\mu, \\sigma) = \\frac{f(t|\\mu, \\sigma)}{S(t|\\mu, \\sigma)},$$ Φ(⋅) cumulative distribution function standard normal distribution.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"loglogistic-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Loglogistic Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ LL(α,γ), $$     f(t|\\alpha, \\gamma) = \\frac{\\frac{\\alpha}{\\gamma}\\left(\\frac{t}{\\gamma}\\right)^{\\alpha-1}}{\\left[1 + \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right]^2}I_{[0, \\infty)}(t), ~ \\alpha>0, \\gamma>0, $$ α > 0 γ > 0 shape scale parameters, respectively. survival hazard functions case given : $$S(t|\\alpha, \\gamma) = \\frac{1}{1+ \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}}$$ $$     h(t|\\alpha, \\gamma) = \\frac{\\frac{\\alpha}{\\gamma}\\left(\\frac{t}{\\gamma}\\right)^{\\alpha-1}}{1 + \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}}. $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"gamma-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Gamma Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ Gamma(α,γ), $$f(t|\\alpha, \\lambda) = \\frac{\\lambda^{\\alpha}}{\\Gamma(\\alpha)}t^{\\alpha-1}\\exp\\left\\{-\\lambda t\\right\\}I_{[0, \\infty)}(t),$$ Γ(α) = ∫0∞uα − 1exp { − u}du gamma function. survival function given $$S(t|\\alpha, \\lambda) = 1 - \\frac{\\gamma^{*}(\\alpha, \\gamma t)}{\\Gamma(\\alpha)},$$ γ*(α,γt) lower incomplete gamma function, available numerically. Finally, hazard function expressed : $$h(t|\\alpha, \\lambda) = \\frac{f(t|\\alpha, \\gamma)}{S(t|\\alpha, \\gamma)}.$$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"rayleigh-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Rayleigh Distribution","title":"Fitting Survival Regression Models via Stan ","text":"Let T ∼ rayleigh(σ), σ > 0 scale parameter. , density, survival hazard functions respectively given : $$f(t|\\sigma) = \\frac{x}{\\sigma^2}\\exp\\left\\{-\\frac{x^2}{2\\sigma^2}\\right\\},$$ $$S(t|\\sigma) = \\exp\\left\\{-\\frac{x^2}{2\\sigma^2}\\right\\}$$ $$h(t|\\sigma) = \\frac{x}{\\sigma^2}.$$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"birnbaum-saunders-fatigue-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Birnbaum-Saunders (fatigue) Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ fatigue(α,γ), $$     f(t|\\alpha, \\gamma) = \\frac{\\sqrt{\\frac{t}{\\gamma}}+\\sqrt{\\frac{\\gamma}{t}}}{2 \\alpha t}\\phi\\left(\\sqrt{\\frac{t}{\\gamma}}+\\sqrt{\\frac{\\gamma}{t}}\\right)(t), ~ \\alpha>0, \\gamma>0, $$ ϕ(⋅) probability density function standard normal distribution, α > 0 γ > 0 shape scale parameters, respectively. survival function case given : $$     S(t|\\alpha, \\gamma) =\\Phi\\left(\\sqrt{\\frac{t}{\\gamma}}-\\sqrt{\\frac{\\gamma}{t}}\\right)(t) $$, Φ(⋅) cumulative distribution function standard normal distribution. hazard function given $$h(t|\\mu, \\sigma) = \\frac{f(t|\\alpha, \\gamma)}{S(t|\\alpha, \\gamma)}. $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"regression-models","dir":"","previous_headings":"","what":"Regression models","title":"Fitting Survival Regression Models via Stan ","text":"covariates available, possible fit four different regression models R package survstan: accelerated failure time (AFT) models; proportional hazards (PH) models; proportional odds (PO) models; accelerated hazard (AH) models. Yang Prentice (YP) models. Let x 1 × p vector covariates, β p × 1 regression coefficients, θ vector parameters associated baseline survival distribution, denote Θ = (θ,β)T full vector parameters. , ensure identifiability, regression structures linear predictor xβ include intercept term. regression survival models implemented R package survstan briefly described sequel.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"accelerate-failure-time-models","dir":"","previous_headings":"Regression models","what":"Accelerate Failure Time Models","title":"Fitting Survival Regression Models via Stan ","text":"Accelerated failure time (AFT) models defined T = exp {xβ}ν, ν follows baseline distribution survival function S0(⋅|θ) f(t|Θ,x) = e−xβf0(te−xβ|θ) S(t|Θ,x) = S0(te−xβ|θ).","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"proportional-hazards-models","dir":"","previous_headings":"Regression models","what":"Proportional Hazards Models","title":"Fitting Survival Regression Models via Stan ","text":"Proportional hazards (PH) models defined h(t|Θ,x) = h0(t|θ)exp {xβ}, h0(t|θ) baseline hazard function f(t|Θ,x) = h0(t|θ)exp {xβ−H0(t|θ)exβ}, S(t|Θ,x) = exp {−H0(t|θ)exβ}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"proportional-odds-models","dir":"","previous_headings":"Regression models","what":"Proportional Odds Models","title":"Fitting Survival Regression Models via Stan ","text":"Proportional Odds (PO) models defined R(t|Θ,x) = R0(t|θ)exp {xβ}, $\\displaystyle R_{0}(t|\\boldsymbol{\\theta}) = \\frac{1-S_{0}(t|\\boldsymbol{\\theta})}{S_{0}(t|\\boldsymbol{\\theta})} = \\exp\\{H_{0}(t|\\boldsymbol{\\theta})\\}-1$ baseline odds function $$ f(t|\\boldsymbol{\\Theta}, \\mathbf{x}) = \\frac{h_{0}(t|\\boldsymbol{\\theta})\\exp\\{\\mathbf{x} \\boldsymbol{\\beta} + H_{0}(t|\\boldsymbol{\\theta})\\}}{[1 + R_{0}(t|\\boldsymbol{\\theta})e^{\\mathbf{x} \\boldsymbol{\\beta}}]^2}. $$ $$ S(t|\\boldsymbol{\\Theta}, \\mathbf{x}) = \\frac{1}{1 + R_{0}(t|\\boldsymbol{\\theta})e^{\\mathbf{x} \\boldsymbol{\\beta}}}. $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"accelerated-hazard-models","dir":"","previous_headings":"Regression models","what":"Accelerated Hazard Models","title":"Fitting Survival Regression Models via Stan ","text":"Accelerated hazard (AH) models defined h(t|Θ,x) = h0(texβ|θ) S(t|Θ,x) = exp {−H0(texβ|θ)e−xβ} f(t|θ,x) = h0(texβ|θ)exp {−H0(texβ|θ)e−xβ}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"yang-and-prentice-models","dir":"","previous_headings":"Regression models","what":"Yang and Prentice Models","title":"Fitting Survival Regression Models via Stan ","text":"survival function Yang Prentice (YP) model given : $$S(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = \\left[1+\\frac{\\kappa_{S}}{\\kappa_{L}}R_{0}(t|\\boldsymbol{\\theta})\\right]^{-\\kappa_{L}}. $$ hazard probability density functions expressed : $$h(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = \\frac{\\kappa_{S}h_{0}(t|\\boldsymbol{\\theta})\\exp\\{H_{0}(t|\\boldsymbol{\\theta})\\}}{\\left[1+\\frac{\\kappa_{S}}{\\kappa_{L}}R_{0}(t|\\boldsymbol{\\theta})\\right]} $$ $$f(t|\\boldsymbol{\\theta},\\boldsymbol{\\beta}, \\boldsymbol{\\phi}) = \\kappa_{S}h_{0}(t|\\boldsymbol{\\theta})\\exp\\{H_{0}(t|\\boldsymbol{\\theta})\\}\\left[1+\\frac{\\kappa_{S}}{\\kappa_{L}}R_{0}(t|\\boldsymbol{\\theta})\\right]^{-(1+\\kappa_{L})}, $$ respectively, κS = exp {xβ} κL = exp {xϕ}.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike information criterion — AIC.survstan","title":"Akaike information criterion — AIC.survstan","text":"Akaike information criterion","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike information criterion — AIC.survstan","text":"","code":"# S3 method for survstan AIC(object, ..., k = 2)"},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike information criterion — AIC.survstan","text":"object object class survstan. ... arguments passed methods. k numeric, penalty per parameter used; default k = 2 classical AIC.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike information criterion — AIC.survstan","text":"Akaike information criterion value single model passed function; otherwise, data.frame Akaike information criterion values number parameters returned.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Akaike information criterion — AIC.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) AIC(fit1, fit2, fit3) #>    fit       aic npars #> 1 fit1  29.21194     2 #> 2 fit2 200.72830     3 #> 3 fit3 202.16899     4 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Accelerated Failure Time Models — aftreg","title":"Fitting Accelerated Failure Time Models — aftreg","text":"Function fit accelerated failure time (AFT)  models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Accelerated Failure Time Models — aftreg","text":"","code":"aftreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Accelerated Failure Time Models — aftreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Accelerated Failure Time Models — aftreg","text":"aftreg returns object class \"aftreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Accelerated Failure Time Models — aftreg","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> aftreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Accelerated failure time model fit with weibull baseline distribution  #>  #> Regression coefficients: #>         Estimate   StdErr z.value p.value #> ecog.ps -0.38505  0.52698 -0.7307  0.4650 #> rx       0.52876  0.52920  0.9992  0.3177 #>  #> Baseline parameters: #>        estimate        se      2.5%     97.5% #> alpha   1.13144   0.52698   0.69016    1.8549 #> gamma 988.83418   0.52920  98.36600 9940.3556 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Accelerated Hazard Models — ahreg","title":"Fitting Accelerated Hazard Models — ahreg","text":"Function fit accelerated hazard (AH) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Accelerated Hazard Models — ahreg","text":"","code":"ahreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Accelerated Hazard Models — ahreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Accelerated Hazard Models — ahreg","text":"ahreg returns object class \"ahreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Accelerated Hazard Models — ahreg","text":"","code":"# \\donttest{ library(survstan) fit <- ahreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> ahreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Accelerated hazard model fit with weibull baseline distribution  #>  #> Regression coefficients: #>         Estimate  StdErr z.value p.value #> ecog.ps   3.3151  8.4290  0.3933  0.6941 #> rx       -4.5519 10.6107 -0.4290  0.6679 #>  #> Baseline parameters: #>        estimate        se      2.5%     97.5% #> alpha   1.13140   8.42896   0.69021    1.8546 #> gamma 988.95076  10.61068  98.37212 9942.0813 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"anova method for survstan models — anova.survstan","title":"anova method for survstan models — anova.survstan","text":"Compute analysis variance (deviance) tables one fitted model objects.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova method for survstan models — anova.survstan","text":"","code":"# S3 method for survstan anova(...)"},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"anova method for survstan models — anova.survstan","text":"... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"anova method for survstan models — anova.survstan","text":"ANOVA table.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova method for survstan models — anova.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) anova(fit1, fit2, fit3) #>  #> weibull(aft) 1: Surv(futime, fustat) ~ 1  #> weibull(aft) 2: Surv(futime, fustat) ~ rx  #> weibull(aft) 3: Surv(futime, fustat) ~ ecog.ps + rx  #> ---  #>                     loglik         LR df Pr(>Chi) #> weibull(aft) 1:  -12.60597 -168.95704  2   1.0000 #> weibull(aft) 2:  -97.36415    0.55931  1   0.4545 #> weibull(aft) 3:  -97.08449          -  -        - # }"},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated regression coefficients — coef.survstan","title":"Estimated regression coefficients — coef.survstan","text":"Estimated regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated regression coefficients — coef.survstan","text":"","code":"# S3 method for survstan coef(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated regression coefficients — coef.survstan","text":"object object class survstan ... arguments passed methods","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimated regression coefficients — coef.survstan","text":"estimated regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimated regression coefficients — coef.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) coef(fit) #>    ecog.ps         rx  #> -0.3850453  0.5287577  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for the regression coefficients — confint.survstan","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"Confidence intervals regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"","code":"# S3 method for survstan confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"object object class survstan. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"100(1-alpha) confidence intervals regression coefficients.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) confint(fit) #>               2.5%        97.5% #> ecog.ps -1.4179102    0.6478196 #> rx      -0.5084503    1.5659657 #> alpha    0.6901645    1.8548609 #> gamma   98.3660009 9940.3556003 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the crossing survival times — cross_time.ypreg","title":"Computes the crossing survival times — cross_time.ypreg","text":"Computes crossing survival times","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the crossing survival times — cross_time.ypreg","text":"","code":"# S3 method for ypreg cross_time(object, newdata1, newdata2, conf.level = 0.95, nboot = 1000, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the crossing survival times — cross_time.ypreg","text":"object object class ypreg newdata1 data frame containing first set explanatory variables newdata2 data frame containing second set explanatory variables conf.level level confidence/credible intervals nboot number bootstrap samples (default nboot=1000). ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the crossing survival times — cross_time.ypreg","text":"crossing survival time","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the crossing survival times — cross_time.ypreg","text":"","code":"# \\donttest{ library(survstan) data(ipass) fit <- ypreg(Surv(time, status)~arm, data=ipass, baseline = \"weibull\") summary(fit) #> Call: #> ypreg(formula = Surv(time, status) ~ arm, data = ipass, baseline = \"weibull\") #>  #> Yang & Prentice model fit with weibull baseline distribution  #>  #> Regression coefficients: #>            Estimate    StdErr  z.value   p.value     #> short-arm  1.361063  0.182368   7.4633  8.44e-14 *** #> long-arm  -1.365391  0.082943 -16.4619 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Baseline parameters: #>       estimate       se     2.5%  97.5% #> alpha 1.846062 0.182368 1.731071 1.9687 #> gamma 6.961753 0.082943 6.643658 7.2951 #> ---  #> loglik = -2772.375   AIC = 5552.751  newdata1 <- data.frame(arm=0) newdata2 <- data.frame(arm=1) tcross <- cross_time(fit, newdata1, newdata2, nboot = 10) tcross #>       Est.     2.5%    97.5% #> 1 5.867165 5.327282 6.882164 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method cross_time — cross_time","title":"Generic S3 method cross_time — cross_time","text":"Generic S3 method cross_time","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method cross_time — cross_time","text":"","code":"cross_time(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method cross_time — cross_time","text":"object fitted model object ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/cross_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method cross_time — cross_time","text":"crossing survival time","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/emmeans-survstan-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Support Functions for emmeans — emmeans-survstan-helpers","title":"Support Functions for emmeans — emmeans-survstan-helpers","text":"Functions required compatibility survstan emmeans. Users required call functions . Instead, called automatically emmeans function emmeans package.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/emmeans-survstan-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support Functions for emmeans — emmeans-survstan-helpers","text":"","code":"recover_data.survstan(object, ...)  recover_data.ypreg(object, term = c(\"short\", \"long\"), ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/emmeans-survstan-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support Functions for emmeans — emmeans-survstan-helpers","text":"object object class supported new method. ... Additional parameters may supported method. term character specifying whether short long term regression coefficients used.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters estimates of a survstan model — estimates","title":"Parameters estimates of a survstan model — estimates","text":"Parameters estimates survstan model","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters estimates of a survstan model — estimates","text":"","code":"estimates(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters estimates of a survstan model — estimates","text":"object object class survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters estimates of a survstan model — estimates","text":"parameters estimates given survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameters estimates of a survstan model — estimates","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) estimates(fit) #>     ecog.ps          rx       alpha       gamma  #>  -0.3850453   0.5287577   1.1314412 988.8341760  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract AIC from a Fitted Model — extractAIC.survstan","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"Computes (generalized) Akaike Information Criterion fitted parametric model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"","code":"# S3 method for survstan extractAIC(fit, scale, k = 2, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"fit fitted model class survstan scale optional numeric specifying scale parameter model. Currently used \"lm\" method, scale specifies estimate error variance, scale = 0 indicates estimated maximum likelihood. k numeric specifying ‘weight’ equivalent degrees freedom part AIC formula. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"ANOVA table.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) extractAIC(fit1) #> [1]  2.00000 29.21194 extractAIC(fit2) #> [1]   3.0000 200.7283 extractAIC(fit3) #> [1]   4.000 202.169 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/gastric.html","id":null,"dir":"Reference","previous_headings":"","what":"Gastric cancer data set — gastric","title":"Gastric cancer data set — gastric","text":"Data set clinical trial conducted Gastrointestinal Tumor Study Group (GTSG) 1982. data set refers survival times patients locally nonresectable gastric cancer. Patients either treated chemotherapy combined radiation chemotherapy alone.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/gastric.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gastric cancer data set — gastric","text":"data frame 90 rows 3 variables: time: survival times (days) status: failure indicator (1 - failure; 0 - otherwise) trt: treatments (1 - chemotherapy + radiation; 0 - chemotherapy alone)","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/gastric.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gastric cancer data set — gastric","text":"Gastrointestinal Tumor Study Group. (1982) Comparison Combination Chemotherapy Combined Modality Therapy Locally Advanced Gastric Carcinoma. Cancer 49:1771-7.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/gastric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gastric cancer data set — gastric","text":"Fabio N. Demarqui fndemarqui@est.ufmg.br","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method ggresiduals — ggresiduals","title":"Generic S3 method ggresiduals — ggresiduals","text":"Generic S3 method ggresiduals","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method ggresiduals — ggresiduals","text":"","code":"ggresiduals(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method ggresiduals — ggresiduals","text":"object fitted model object. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method ggresiduals — ggresiduals","text":"desired residual plot.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic S3 method ggresiduals — ggresiduals","text":"Generic method plot residuals survival models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"ggresiduals method for survstan models — ggresiduals.survstan","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"ggresiduals method survstan models","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"","code":"# S3 method for survstan ggresiduals(object, type = c(\"coxsnell\", \"martingale\", \"deviance\"), ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"object fitted model object class survstan. type type residuals used plot: coxsnell (default), martingale deviance. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"desired residual plot.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"function produces residuals plots Cox-Snell residuals, martingale residuals deviance residuals.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"","code":"# \\donttest{ library(survstan) ovarian$rx <- as.factor(ovarian$rx) fit <- aftreg(Surv(futime, fustat) ~ age + rx, data = ovarian, baseline = \"weibull\", init = 0) ggresiduals(fit, type = \"coxsnell\")  ggresiduals(fit, type = \"martingale\") #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'  ggresiduals(fit, type = \"deviance\")  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/ipass.html","id":null,"dir":"Reference","previous_headings":"","what":"IRESSA Pan-Asia Study (IPASS) data set — ipass","title":"IRESSA Pan-Asia Study (IPASS) data set — ipass","text":"Reconstructed IPASS clinical trial data reported Argyropoulos Unruh (2015). Although reconstructed, data set preserves features exhibited references full access observations clinical trial. data base related period March 2006 April 2008. main purpose study compare drug gefitinib carboplatin/paclitaxel doublet chemotherapy first line treatment, terms progression free survival (months), applied selected non-small-cell lung cancer (NSCLC) patients.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ipass.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IRESSA Pan-Asia Study (IPASS) data set — ipass","text":"data frame 1217 rows 3 variables: time: progression free survival (months) status: failure indicator (1 - failure; 0 - otherwise) arm: (1 - gefitinib; 0 - carboplatin/paclitaxel doublet chemotherapy)","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ipass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"IRESSA Pan-Asia Study (IPASS) data set — ipass","text":"Argyropoulos, C. Unruh, M. L. (2015). Analysis time event outcomes randomized controlled trials generalized additive models. PLOS One 10, 1-33.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ipass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"IRESSA Pan-Asia Study (IPASS) data set — ipass","text":"Fabio N. Demarqui fndemarqui@est.ufmg.br","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"Extracts log-likelihood function fitted parametric model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"","code":"# S3 method for survstan logLik(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"object fitted model class survstan ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"log-likelihood value single model passed function; otherwise, data.frame log-likelihood values number parameters returned.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/logLik.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Log-Likelihood from a Fitted Model — logLik.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) logLik(fit1, fit2, fit3) #>    fit    loglik npars #> 1 fit1 -12.60597     2 #> 2 fit3 -97.08449     4 #> 3 fit2 -97.36415     3 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Model.matrix method for survstan models — model.matrix.survstan","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"Reconstruct model matrix survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"","code":"# S3 method for survstan model.matrix(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"object object class survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"model matrix (matrices) fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) model.matrix(fit) #>    ecog.ps rx #> 1        1  1 #> 2        1  1 #> 3        2  1 #> 4        1  2 #> 5        1  1 #> 6        2  1 #> 7        2  2 #> 8        2  2 #> 9        1  1 #> 10       2  2 #> 11       2  1 #> 12       1  2 #> 13       2  2 #> 14       1  2 #> 15       1  1 #> 16       2  1 #> 17       2  1 #> 18       1  1 #> 19       1  2 #> 20       1  2 #> 21       2  2 #> 22       2  1 #> 23       1  1 #> 24       2  2 #> 25       1  2 #> 26       1  2 #> attr(,\"assign\") #> [1] 1 2 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Proportional Hazards Models — phreg","title":"Fitting Proportional Hazards Models — phreg","text":"Function fit proportional hazards (PH) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Proportional Hazards Models — phreg","text":"","code":"phreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Proportional Hazards Models — phreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Proportional Hazards Models — phreg","text":"phreg returns object class \"phreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Proportional Hazards Models — phreg","text":"","code":"# \\donttest{ library(survstan) fit <- phreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> phreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Proportional hazards model fit with weibull baseline distribution  #>  #> Regression coefficients: #>         Estimate   StdErr z.value p.value #> ecog.ps  0.43563  0.58727  0.7418  0.4582 #> rx      -0.59811  0.58823 -1.0168  0.3093 #>  #> Baseline parameters: #>        estimate        se      2.5%     97.5% #> alpha   1.13138   0.58727   0.69012    1.8548 #> gamma 988.99454   0.58823  98.37037 9943.1386 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Proportional Odds Models — poreg","title":"Fitting Proportional Odds Models — poreg","text":"Function fit proportional odds (PO) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Proportional Odds Models — poreg","text":"","code":"poreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Proportional Odds Models — poreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Proportional Odds Models — poreg","text":"poreg returns object class \"poreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Proportional Odds Models — poreg","text":"","code":"# \\donttest{ library(survstan) fit <- poreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> poreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Proportional odds model fit with weibull baseline distribution  #>  #> Regression coefficients: #>         Estimate   StdErr z.value p.value #> ecog.ps  0.81190  0.71810  1.1306  0.2582 #> rx      -0.69296  0.71685 -0.9667  0.3337 #>  #> Baseline parameters: #>         estimate         se       2.5%     97.5% #> alpha    1.18318    0.71810    0.64703    2.1636 #> gamma 1340.62000    0.71685  273.93102 6561.0022 #> ---  #> loglik = -97.03918   AIC = 202.0784  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the summary.survstan output — print.summary.survstan","title":"Print the summary.survstan output — print.summary.survstan","text":"Produces printed summary fitted survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the summary.survstan output — print.summary.survstan","text":"","code":"# S3 method for summary.survstan print(x, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the summary.survstan output — print.summary.survstan","text":"x object class summary.survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the summary.survstan output — print.summary.survstan","text":"return value, called side effects.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank a collection of survstan models — rank_models","title":"Rank a collection of survstan models — rank_models","text":"Rank collection survstan models","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank a collection of survstan models — rank_models","text":"","code":"rank_models(formula, data, survreg, baseline, dist = NULL, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank a collection of survstan models — rank_models","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. survreg survival regression models fitted (AFT, AH, PH, PO YP). baseline baseline distributions fitted; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distributions (compability survreg function); default NULL. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank a collection of survstan models — rank_models","text":"tibble containing fitted models ranked according AICs.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/rank_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank a collection of survstan models — rank_models","text":"","code":"# \\donttest{ library(survstan) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  veteran <- veteran %>%   mutate(across(c(trt, prior, celltype), as.factor)) fits <- rank_models(   formula = Surv(time, status) ~ celltype+karno,   data = veteran,   survreg = c(\"aftreg\", \"ahreg\", \"phreg\", \"poreg\", \"ypreg\"),   baseline = c(\"exponential\", \"weibull\", \"lognormal\", \"loglogistic\", \"fatigue\") ) #> Warning: There were 2 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `fit = purrr::pmap(...)`. #> Caused by warning in `ahreg()`: #> ! The AH model with baseline exponential distribution is non-identifiable! Please, choose another baseline distribution. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning. # }"},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"residuals method for survstan models — residuals.survstan","title":"residuals method for survstan models — residuals.survstan","text":"residuals method survstan models","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"residuals method for survstan models — residuals.survstan","text":"","code":"# S3 method for survstan residuals(object, type = c(\"coxsnell\", \"martingale\", \"deviance\"), ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"residuals method for survstan models — residuals.survstan","text":"object fitted model object class survstan. type type residuals desired: coxsnell (default), martingale deviance. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"residuals method for survstan models — residuals.survstan","text":"vector containing desired residuals.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"residuals method for survstan models — residuals.survstan","text":"function extracts residuals, martingale residuals deviance residuals survstan object.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/residuals.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"residuals method for survstan models — residuals.survstan","text":"","code":"# \\donttest{ library(survstan) ovarian$rx <- as.factor(ovarian$rx) fit <- aftreg(Surv(futime, fustat) ~ age + rx, data = ovarian, baseline = \"weibull\", init = 0) residuals(fit, type = \"coxsnell\") #>          1          2          3          4          5          6          7  #> 0.10688361 0.48993205 0.26908236 0.08873277 0.16806224 0.43241247 0.17686609  #>          8          9         10         11         12         13         14  #> 0.28063085 1.47404617 0.19518977 0.86115946 0.15636767 0.65177670 0.45113772  #>         15         16         17         18         19         20         21  #> 0.10611859 0.20681060 0.16076382 0.40804195 0.57536345 0.16099606 1.51372713  #>         22         23         24         25         26  #> 2.28089328 0.03657446 0.26538744 0.33530877 0.14774074  residuals(fit, type = \"martingale\") #>           1           2           3           4           5           6  #>  0.89311639  0.51006795  0.73091764 -0.08873277  0.83193776 -0.43241247  #>           7           8           9          10          11          12  #>  0.82313391  0.71936915 -1.47404617  0.80481023  0.13884054 -0.15636767  #>          13          14          15          16          17          18  #> -0.65177670 -0.45113772 -0.10611859 -0.20681060 -0.16076382 -0.40804195  #>          19          20          21          22          23          24  #> -0.57536345 -0.16099606 -1.51372713 -1.28089328  0.96342554  0.73461256  #>          25          26  #>  0.66469123 -0.14774074  residuals(fit, type = \"deviance\") #>          1          2          3          4          5          6          7  #>  1.6388401  0.6378411  1.0787216 -0.4212666  1.3794804 -0.9299596  1.3485018  #>          8          9         10         11         12         13         14  #>  1.0500914 -1.7170010  1.2876123  0.1458427 -0.5592275 -1.1417326 -0.9498818  #>         15         16         17         18         19         20         21  #> -0.4606921 -0.6431339 -0.5670341 -0.9033736 -1.0727194 -0.5674435 -1.7399581  #>         22         23         24         25         26  #> -0.9553283  2.1656313  1.0880735  0.9252159 -0.5435821  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/se.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method se — se","title":"Generic S3 method se — se","text":"Generic S3 method se","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method se — se","text":"","code":"se(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method se — se","text":"object fitted model object. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method se — se","text":"standard errors associated set parameter estimators given model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated standard errors — se.survstan","title":"Estimated standard errors — se.survstan","text":"Estimated standard errors","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated standard errors — se.survstan","text":"","code":"# S3 method for survstan se(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated standard errors — se.survstan","text":"object object class survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimated standard errors — se.survstan","text":"vector standard errors.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/se.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimated standard errors — se.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) se(fit) #>   ecog.ps        rx  #> 0.5269816 0.5291975  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for a survstan object — summary.survstan","title":"Summary for a survstan object — summary.survstan","text":"Summary survstan object","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for a survstan object — summary.survstan","text":"","code":"# S3 method for survstan summary(object, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for a survstan object — summary.survstan","text":"object result call summary.survstan conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for a survstan object — summary.survstan","text":"object class summary.survstan containing summary fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"survfit method for survstan models — survfit.survstan","title":"survfit method for survstan models — survfit.survstan","text":"Computes predicted survivor function phpe model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survfit method for survstan models — survfit.survstan","text":"","code":"# S3 method for survstan survfit(formula, newdata, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survfit method for survstan models — survfit.survstan","text":"formula object class survstan newdata data frame containing set explanatory variables. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"survfit method for survstan models — survfit.survstan","text":"list containing estimated survival probabilities.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survfit.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"survfit method for survstan models — survfit.survstan","text":"","code":"# \\donttest{ library(survstan) library(ggplot2) data(ipass) ipass$arm <- as.factor(ipass$arm) fit <- ypreg(Surv(time, status)~arm, data=ipass, baseline = \"weibull\") summary(fit) #> Call: #> ypreg(formula = Surv(time, status) ~ arm, data = ipass, baseline = \"weibull\") #>  #> Yang & Prentice model fit with weibull baseline distribution  #>  #> Regression coefficients: #>             Estimate    StdErr  z.value   p.value     #> short-arm1  1.361063  0.182368   7.4633  8.44e-14 *** #> long-arm1  -1.365391  0.082943 -16.4619 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Baseline parameters: #>       estimate       se     2.5%  97.5% #> alpha 1.846062 0.182368 1.731071 1.9687 #> gamma 6.961753 0.082943 6.643658 7.2951 #> ---  #> loglik = -2772.375   AIC = 5552.751  newdata <- data.frame(arm=as.factor(0:1)) surv <- survfit(fit, newdata) ggplot(surv, aes(x=time, y=surv, color = arm)) +   geom_line()  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/survstan-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'survstan' package. — survstan-package","title":"The 'survstan' package. — survstan-package","text":"aim R package survstan provide toolkit fitting survival models using Stan. R package survstan can used fit right-censored survival data independent censoring. implemented models allow fitting survival data presence/absence covariates. inferential procedures currently based maximum likelihood (ML) approach.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survstan-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'survstan' package. — survstan-package","text":"Stan Development Team (2023). “RStan: R interface Stan.” R package version 2.21.8, https://mc-stan.org/. Lawless JF (2002). Statistical Models Methods Lifetime Data,  Wiley Series Probability Statistics, 2nd Edition edition. John Wiley Sons. ISBN 9780471372158. Bennett S (1983). “Analysis survival data proportional odds model.” Statistics Medicine, 2(2), 273-277. doi:10.1002/sim.4780020223 . Chen YQ, Wang M (2000). “Analysis Accelerated Hazards Models.” Journal American Statistical Association, 95(450), 608-618. doi:10.1080/01621459.2000.10474236 . Demarqui FN, Mayrink VD (2021). “Yang Prentice model piecewise exponential baseline distribution modeling lifetime data crossing survival curves.” Brazilian Journal Probability Statistics, 35(1), 172 -- 186. doi:10.1214/20-BJPS471 .","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method tidy — tidy","title":"Generic S3 method tidy — tidy","text":"Generic S3 method tidy","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method tidy — tidy","text":"","code":"tidy(object, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method tidy — tidy","text":"object fitted model object. conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method tidy — tidy","text":"tibble summary fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic S3 method tidy — tidy","text":"Convert fitted model tibble.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a survstan object — tidy.survstan","title":"Tidy a survstan object — tidy.survstan","text":"Tidy survstan object","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a survstan object — tidy.survstan","text":"","code":"# S3 method for survstan tidy(object, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a survstan object — tidy.survstan","text":"object fitted model object. conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a survstan object — tidy.survstan","text":"tibble summary fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy a survstan object — tidy.survstan","text":"Convert fitted model tibble.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy a survstan object — tidy.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) tidy(fit) #> # A tibble: 4 × 6 #>   type        parameter   estimate          se       `2.5%`     `97.5%` #>   <chr>       <chr>          <dbl>       <dbl>        <dbl>       <dbl> #> 1 coefficient ecog.ps    -0.385045    0.526982    -1.41791     0.647820 #> 2 coefficient rx          0.528758    0.529197    -0.508450    1.56597  #> 3 baseline    alpha       1.13144     0.285358     0.572150    1.69073  #> 4 baseline    gamma     988.834    1164.34     -1293.23     3270.90     # }"},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.ypreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a ypreg object — tidy.ypreg","title":"Tidy a ypreg object — tidy.ypreg","text":"Tidy ypreg object","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.ypreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a ypreg object — tidy.ypreg","text":"","code":"# S3 method for ypreg tidy(object, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.ypreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a ypreg object — tidy.ypreg","text":"object fitted model object. conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.ypreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a ypreg object — tidy.ypreg","text":"tibble summary fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.ypreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy a ypreg object — tidy.ypreg","text":"Convert fitted model tibble.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.ypreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy a ypreg object — tidy.ypreg","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) tidy(fit) #> # A tibble: 4 × 6 #>   type        parameter   estimate          se       `2.5%`     `97.5%` #>   <chr>       <chr>          <dbl>       <dbl>        <dbl>       <dbl> #> 1 coefficient ecog.ps    -0.385045    0.526982    -1.41791     0.647820 #> 2 coefficient rx          0.528758    0.529197    -0.508450    1.56597  #> 3 baseline    alpha       1.13144     0.285358     0.572150    1.69073  #> 4 baseline    gamma     988.834    1164.34     -1293.23     3270.90     # }"},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-covariance matrix — vcov.survstan","title":"Variance-covariance matrix — vcov.survstan","text":"function extracts returns variance-covariance matrix associated regression coefficients maximum likelihood estimation approach used model fitting.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance-covariance matrix — vcov.survstan","text":"","code":"# S3 method for survstan vcov(object, all = FALSE, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance-covariance matrix — vcov.survstan","text":"object object class survstan. logical; FALSE (default), covariance matrix associated regression coefficients returned; TRUE, full covariance matrix returned. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance-covariance matrix — vcov.survstan","text":"variance-covariance matrix associated parameters estimators.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance-covariance matrix — vcov.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) vcov(fit) #>           ecog.ps        rx #> ecog.ps 0.2777096 0.0110424 #> rx      0.0110424 0.2800500 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Yang and Prentice Models — ypreg","title":"Fitting Yang and Prentice Models — ypreg","text":"Function fit Yang Prentice (YP) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Yang and Prentice Models — ypreg","text":"","code":"ypreg(formula, data, baseline = \"weibull\", dist = NULL, init = 0, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Yang and Prentice Models — ypreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal, loglogistic Birnbaum-Saunders (fatigue) distributions. dist alternative way specify baseline distribution (compatibility survreg function); default NULL. init initial values specification (default value 0); see detailed documentation init optimizing. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Yang and Prentice Models — ypreg","text":"ypreg returns object class \"ypreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ypreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Yang and Prentice Models — ypreg","text":"","code":"# \\donttest{ library(survstan) fit <- ypreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\") summary(fit) #> Call: #> ypreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\") #>  #> Yang & Prentice model fit with weibull baseline distribution  #>  #> Regression coefficients: #>               Estimate   StdErr z.value p.value #> short-ecog.ps  1.36330  0.98921  1.3782  0.1681 #> short-rx      -1.21389  0.96329 -1.2601  0.2076 #> long-ecog.ps  -1.27129  1.40225 -0.9066  0.3646 #> long-rx        1.46122  2.35451  0.6206  0.5349 #>  #> Baseline parameters: #>                 estimate         se       2.5%     97.5% #> short-ecog.ps    1.24544    0.98921    0.58588    2.6475 #> short-rx      1265.53342    0.96329  258.28865 6200.7171 #> long-ecog.ps     1.24544    1.40225    0.58588    2.6475 #> long-rx       1265.53342    2.35451  258.28865 6200.7171 #> ---  #> loglik = -96.76574   AIC = 205.5315  # }"},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-001","dir":"Changelog","previous_headings":"","what":"survstan 0.0.1","title":"survstan 0.0.1","text":"CRAN release: 2023-05-04 Added NEWS.md file track changes package.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-002","dir":"Changelog","previous_headings":"","what":"survstan 0.0.2","title":"survstan 0.0.2","text":"CRAN release: 2023-06-09 Implementation Yang Prentice (YP) model dealing survival data possibly crossing survival curves. Implementation survfit.survstan method implemented models. Improvement output anova.survstan function: now chosen regression model baseline distribution displayed ANOVA table. Addition dist argument model fitting functions (aftreg(), ahreg(), phreg(), poreg() ypreg()) alternative way specify baseline distribution (compability survival::survreg() function). Addition init argument model fitting functions (aftreg(), ahreg(), phreg(), poreg() ypreg()) default value equals 0 fix initial starting values calling rstan::optimizing() function. Addition extractAIC.survstan method required stats::step() function carrying model selection via stepwise procedures. Addition logLik.survstan method extract log-likelihood value fitted model. AIC.survstan method now returns data.frame aic values along corresponding number model parameters one fit passed method. Addition gastric ipass datasets.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-003","dir":"Changelog","previous_headings":"","what":"survstan 0.0.3","title":"survstan 0.0.3","text":"CRAN release: 2023-08-09 Weibull distribution now default baseline distribution (replacing exponential distribution previous versions). Implementation Birnbaum-Saunders (fatigue) distribution. Implementation function rank_models rank survstan models according AICs.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-004","dir":"Changelog","previous_headings":"","what":"survstan 0.0.4","title":"survstan 0.0.4","text":"CRAN release: 2023-09-21 survstan package now requires rstan version 2.26.","code":""},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-005","dir":"Changelog","previous_headings":"","what":"survstan 0.0.5","title":"survstan 0.0.5","text":"Inclusion emmeans method survstan models. Implementation gamma Rayleigh distributions. Implementation se method computation standard errors. Correction covariance matrix positive parameters. Application delta method avoid negative lower bounds confidence intervals positive parameters. Bug correction implementation survival functions.","code":""}]
