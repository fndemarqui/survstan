[{"path":"https://fndemarqui.github.io/survstan/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 survstan authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fndemarqui.github.io/survstan/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fabio Demarqui. Author, maintainer, copyright holder.","code":""},{"path":"https://fndemarqui.github.io/survstan/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Demarqui F (2023). survstan: Fitting Survival Regression Models via 'Stan'. https://github.com/fndemarqui/survstan, https://fndemarqui.github.io/survstan/.","code":"@Manual{,   title = {survstan: Fitting Survival Regression Models via 'Stan'},   author = {Fabio Demarqui},   year = {2023},   note = {https://github.com/fndemarqui/survstan, https://fndemarqui.github.io/survstan/}, }"},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"survstan","dir":"","previous_headings":"","what":"Fitting Survival Regression Models via Stan ","title":"Fitting Survival Regression Models via Stan ","text":"R package survstan can used fit right-censored survival data independent censoring. implemented models allow fitting survival data presence/absence covariates. inferential procedures currently based maximum likelihood (ML) approach.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fitting Survival Regression Models via Stan ","text":"can install released version survstan CRAN : can install development version survstan GitHub :","code":"install.packages(\"survstan\") # install.packages(\"devtools\") devtools::install_github(\"fndemarqui/survstan\")"},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"inference-procedures","dir":"","previous_headings":"","what":"Inference procedures","title":"Fitting Survival Regression Models via Stan ","text":"Let (ti,δi) observed survival time corresponding failure indicator,  = 1, ⋯, n, θ k × 1 vector parameters. , likelihood function right-censored survival data independent censoring can expressed : $$ L(\\boldsymbol{\\theta}) = \\prod_{=1}^{n}f(t_{}|\\boldsymbol{\\theta})^{\\delta_{}}S(t_{}|\\boldsymbol{\\theta})^{1-\\delta_{}}. $$ maximum likelihood estimate (MLE) θ obtained directly maximization log (L(θ)) using rstan::optimizing() function. function rstan::optimizing() provides hessian matrix log (L(θ)), needed obtain observed Fisher information matrix, given : $$         \\mathscr{}(\\hat{\\boldsymbol{\\theta}}) = -\\frac{\\partial^2}{\\partial \\boldsymbol{\\theta}\\boldsymbol{\\theta}'} \\log L(\\boldsymbol{\\theta})\\mid_{\\boldsymbol{\\theta}=\\hat{\\boldsymbol{\\theta}}}, $$ Inferences θ based asymptotic properties MLE, $\\hat{\\boldsymbol{\\theta}}$, state : $$ \\hat{\\boldsymbol{\\theta}} \\asymp N_{k}(\\boldsymbol{\\theta}, \\mathscr{}^{-1}(\\hat{\\boldsymbol{\\theta}})). $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"baseline-distributions","dir":"","previous_headings":"","what":"Baseline Distributions","title":"Fitting Survival Regression Models via Stan ","text":"popular baseline survival distributions implemented R package survstan. distributions include: Exponential Weibull Lognormal Loglogistic parametrizations adopted package survstan presented next.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"exponential-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Exponential Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ Exp(λ), f(t|λ) = λexp {−λt}[0, ∞)(t), λ > 0 rate parameter. survival hazard functions case given : S(t|λ) = exp {−λt} h(t|λ) = λ.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"weibull-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Weibull Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ Weibull(α,γ), $$ f(t|\\alpha, \\gamma) = \\frac{\\alpha}{\\gamma^{\\alpha}}t^{\\alpha-1}\\exp\\left\\{-\\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right\\}I_{[0, \\infty)}(t), $$ α > 0 γ > 0 shape scale parameters, respectively. survival hazard functions case given : $$         S(t|\\alpha, \\gamma) = \\exp\\left\\{-\\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right\\} $$ $$         h(t|\\alpha, \\gamma) = \\frac{\\alpha}{\\gamma^{\\alpha}}t^{\\alpha-1}. $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"lognormal-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Lognormal Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ LN(μ,σ), $$ f(t|\\mu, \\sigma) = \\frac{1}{\\sqrt{2\\pi}t\\sigma}\\exp\\left\\{-\\frac{1}{2}\\left(\\frac{log(t)-\\mu}{\\sigma}\\right)^2\\right\\}I_{[0, \\infty)}(t), $$  − ∞ < μ < ∞ σ > 0 mean standard deviation log scale T. survival hazard functions case given : $$S(t|\\mu, \\sigma) = \\Phi\\left(\\frac{-log(t)+\\mu}{\\sigma}\\right)$$ $$h(t|\\mu, \\sigma) = \\frac{f(t|\\mu, \\sigma)}{S(t|\\mu, \\sigma)},$$ Φ(⋅) cumulative distribution function standard normal distribution.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"loglogistic-distribution","dir":"","previous_headings":"Baseline Distributions","what":"Loglogistic Distribution","title":"Fitting Survival Regression Models via Stan ","text":"T ∼ LL(α,γ), $$     f(t|\\alpha, \\gamma) = \\frac{\\frac{\\alpha}{\\gamma}\\left(\\frac{t}{\\gamma}\\right)^{\\alpha-1}}{\\left[1 + \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}\\right]^2}I_{[0, \\infty)}(t), ~ \\alpha>0, \\gamma>0, $$ α > 0 γ > 0 shape scale parameters, respectively. survival hazard functions case given : $$S(t|\\alpha, \\gamma) = \\frac{1}{1+ \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}}$$ $$     h(t|\\alpha, \\gamma) = \\frac{\\frac{\\alpha}{\\gamma}\\left(\\frac{t}{\\gamma}\\right)^{\\alpha-1}}{1 + \\left(\\frac{t}{\\gamma}\\right)^{\\alpha}}. $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"regression-models","dir":"","previous_headings":"","what":"Regression models","title":"Fitting Survival Regression Models via Stan ","text":"covariates available, possible fit four different regression models R package survstan: accelerated failure time (AFT) models; proportional hazards (PH) models; proportional odds (PO) models; accelerated hazard (AH) models. Let x 1 × p vector covariates, β p × 1 regression coefficients, θ vector parameters associated baseline survival distribution, denote Θ = (θ,β)T full vector parameters. , ensure identifiability, regression structures linear predictor xβ include intercept term. regression survival models implemented R package survstan briefly described sequel.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"accelerate-failure-time-models","dir":"","previous_headings":"Regression models","what":"Accelerate Failure Time Models","title":"Fitting Survival Regression Models via Stan ","text":"Accelerated failure time (AFT) models defined T = exp {xβ}ν, ν follows baseline distribution survival function S0(⋅|θ) f(t|Θ,x) = e−xβf0(te−xβ|θ) S(t|Θ,x) = S0(te−xβ|θ).","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"proportional-hazards-models","dir":"","previous_headings":"Regression models","what":"Proportional Hazards Models","title":"Fitting Survival Regression Models via Stan ","text":"Proportional hazards (PH) models defined h(t|Θ,x) = h0(t|θ)exp {xβ}, h0(t|θ) baseline hazard function f(t|Θ,x) = h0(t|θ)exp {xβ−H0(t|θ)exβ}, S(t|Θ,x) = exp {−H0(t|θ)exβ}.","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"proportional-odds-models","dir":"","previous_headings":"Regression models","what":"Proportional Odds Models","title":"Fitting Survival Regression Models via Stan ","text":"Proportional Odds (PO) models defined R(t|Θ,x) = R0(t|θ)exp {xβ}, $\\displaystyle R_{0}(t|\\boldsymbol{\\theta}) = \\frac{1-S_{0}(t|\\boldsymbol{\\theta})}{S_{0}(t|\\boldsymbol{\\theta})} = \\exp\\{H_{0}(t|\\boldsymbol{\\theta})\\}-1$ baseline odds function $$ f(t|\\boldsymbol{\\Theta}, \\mathbf{x}) = \\frac{h_{0}(t|\\boldsymbol{\\theta})\\exp\\{\\mathbf{x} \\boldsymbol{\\beta} + H_{0}(t|\\boldsymbol{\\theta})\\}}{[1 + R_{0}(t|\\boldsymbol{\\theta})e^{\\mathbf{x} \\boldsymbol{\\beta}}]^2}. $$ $$ S(t|\\boldsymbol{\\Theta}, \\mathbf{x}) = \\frac{1}{1 + R_{0}(t|\\boldsymbol{\\theta})e^{\\mathbf{x} \\boldsymbol{\\beta}}}. $$","code":""},{"path":"https://fndemarqui.github.io/survstan/index.html","id":"accelerated-hazard-models","dir":"","previous_headings":"Regression models","what":"Accelerated Hazard Models","title":"Fitting Survival Regression Models via Stan ","text":"Accelerated hazard (AH) models defined h(t|Θ,x) = h0(texβ|θ) S(t|Θ,x) = exp {−H0(texβ|θ)e−xβ} f(t|θ,x) = h0(texβ|θ)exp {−H0(texβ|θ)e−xβ}.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike information criterion — AIC.survstan","title":"Akaike information criterion — AIC.survstan","text":"Akaike information criterion","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike information criterion — AIC.survstan","text":"","code":"# S3 method for survstan AIC(object, ..., k = 2)"},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike information criterion — AIC.survstan","text":"object object class survstan. ... arguments passed methods. k numeric, penalty per parameter used; default k = 2 classical AIC.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike information criterion — AIC.survstan","text":"Akaike information criterion.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/AIC.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Akaike information criterion — AIC.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) AIC(fit1, fit2, fit3) #>     fit1     fit2     fit3  #> 199.9078 200.7283 202.1690  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Accelerated Failure Time Models — aftreg","title":"Fitting Accelerated Failure Time Models — aftreg","text":"Function fit accelerated failure time (AFT)  models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Accelerated Failure Time Models — aftreg","text":"","code":"aftreg(   formula,   data,   baseline = c(\"exponential\", \"weibull\", \"lognormal\", \"loglogistic\"),   ... )"},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Accelerated Failure Time Models — aftreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal loglogistic distributions. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Accelerated Failure Time Models — aftreg","text":"aftreg returns object class \"aftreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/aftreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Accelerated Failure Time Models — aftreg","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) summary(fit) #> Call: #> aftreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\", init = 0) #>  #> Accelerated failure time model fit  #>  #> Regression coefficients: #>         Estimate   StdErr z.value p.value #> ecog.ps -0.38505  0.52698 -0.7307  0.4650 #> rx       0.52876  0.52920  0.9992  0.3177 #>  #> Baseline parameters: #>          estimate          se        2.5%     97.5% #> alpha     1.13144     0.25221     0.63712    1.6258 #> gamma   988.83418  1444.77612 -1842.87498 3820.5433 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Accelerated Hazard Models — ahreg","title":"Fitting Accelerated Hazard Models — ahreg","text":"Function fit accelerated hazard (AH) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Accelerated Hazard Models — ahreg","text":"","code":"ahreg(   formula,   data,   baseline = c(\"exponential\", \"weibull\", \"lognormal\", \"loglogistic\"),   ... )"},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Accelerated Hazard Models — ahreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal loglogistic distributions. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Accelerated Hazard Models — ahreg","text":"ahreg returns object class \"ahreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ahreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Accelerated Hazard Models — ahreg","text":"","code":"# \\donttest{ library(survstan) fit <- ahreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) summary(fit) #> Call: #> ahreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\", init = 0) #>  #> Accelerated hazard model fit  #>  #> Regression coefficients: #>         Estimate  StdErr z.value p.value #> ecog.ps   3.3151  8.4290  0.3933  0.6941 #> rx       -4.5519 10.6107 -0.4290  0.6679 #>  #> Baseline parameters: #>          estimate          se        2.5%     97.5% #> alpha     1.13140     0.25216     0.63718    1.6256 #> gamma   988.95076  1444.81098 -1842.82673 3820.7283 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"anova method for survstan models — anova.survstan","title":"anova method for survstan models — anova.survstan","text":"Compute analysis variance (deviance) tables one fitted model objects.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova method for survstan models — anova.survstan","text":"","code":"# S3 method for survstan anova(...)"},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"anova method for survstan models — anova.survstan","text":"... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"anova method for survstan models — anova.survstan","text":"ANOVA table.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/anova.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova method for survstan models — anova.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) anova(fit1, fit2, fit3) #>  #> Model 1 :  Surv(futime, fustat) ~ 1  #> Model 2 :  Surv(futime, fustat) ~ rx  #> Model 3 :  Surv(futime, fustat) ~ ecog.ps + rx  #> ---  #>             loglik        LR df Pr(>Chi) #> Model 1: -97.95390   1.73882  2   0.4192 #> Model 2: -97.36415   0.55931  1   0.4545 #> Model 3: -97.08449         -  -        - # }"},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated regression coefficients — coef.survstan","title":"Estimated regression coefficients — coef.survstan","text":"Estimated regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated regression coefficients — coef.survstan","text":"","code":"# S3 method for survstan coef(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated regression coefficients — coef.survstan","text":"object object class survstan ... arguments passed methods","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimated regression coefficients — coef.survstan","text":"estimated regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/coef.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimated regression coefficients — coef.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) coef(fit) #>    ecog.ps         rx  #> -0.3850453  0.5287577  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for the regression coefficients — confint.survstan","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"Confidence intervals regression coefficients","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"","code":"# S3 method for survstan confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"object object class survstan. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"100(1-alpha) confidence intervals regression coefficients.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/confint.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for the regression coefficients — confint.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) confint(fit) #>                  2.5%        97.5% #> ecog.ps    -1.4179102    0.6478196 #> rx         -0.5084503    1.5659657 #> alpha       0.6371237    1.6257587 #> gamma   -1842.8749819 3820.5433338 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters estimates of a survstan model — estimates","title":"Parameters estimates of a survstan model — estimates","text":"Parameters estimates survstan model","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters estimates of a survstan model — estimates","text":"","code":"estimates(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters estimates of a survstan model — estimates","text":"object object class survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters estimates of a survstan model — estimates","text":"parameters estimates given survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameters estimates of a survstan model — estimates","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) estimates(fit) #>     ecog.ps          rx       alpha       gamma  #>  -0.3850453   0.5287577   1.1314412 988.8341760  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract AIC from a Fitted Model — extractAIC.survstan","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"Computes (generalized) Akaike Information Criterion fitted parametric model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"","code":"# S3 method for survstan extractAIC(fit, scale, k = 2, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"fit fitted model class survstan scale optional numeric specifying scale parameter model. Currently used \"lm\" method, scale specifies estimate error variance, scale = 0 indicates estimated maximum likelihood. k numeric specifying ‘weight’ equivalent degrees freedom part AIC formula. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"ANOVA table.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/extractAIC.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract AIC from a Fitted Model — extractAIC.survstan","text":"","code":"# \\donttest{ library(survstan) fit1 <- aftreg(Surv(futime, fustat) ~ 1, data = ovarian, baseline = \"weibull\", init = 0) fit2 <- aftreg(Surv(futime, fustat) ~ rx, data = ovarian, baseline = \"weibull\", init = 0) fit3 <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) extractAIC(fit1) #> [1]   2.0000 199.9078 extractAIC(fit2) #> [1]   3.0000 200.7283 extractAIC(fit3) #> [1]   4.000 202.169 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method ggresiduals — ggresiduals","title":"Generic S3 method ggresiduals — ggresiduals","text":"Generic S3 method ggresiduals","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method ggresiduals — ggresiduals","text":"","code":"ggresiduals(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method ggresiduals — ggresiduals","text":"object fitted model object. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method ggresiduals — ggresiduals","text":"desired residual plot.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic S3 method ggresiduals — ggresiduals","text":"Generic method plot residuals survival models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"ggresiduals method for survstan models — ggresiduals.survstan","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"ggresiduals method survstan models","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"","code":"# S3 method for survstan ggresiduals(object, type = c(\"coxsnell\", \"martingale\", \"deviance\"), ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"object fitted model object class survstan. type type residuals used plot: coxsnell (default), martingale deviance. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"desired residual plot.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"function produces residuals plots Cox-Snell residuals, martingale residuals deviance residuals.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/ggresiduals.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggresiduals method for survstan models — ggresiduals.survstan","text":"","code":"# \\donttest{ library(survstan) ovarian$rx <- as.factor(ovarian$rx) fit <- aftreg(Surv(futime, fustat) ~ age + rx, data = ovarian, baseline = \"weibull\", init = 0) ggresiduals(fit, type = \"coxsnell\")  ggresiduals(fit, type = \"martingale\") #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'  ggresiduals(fit, type = \"deviance\")  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Model.matrix method for survstan models — model.matrix.survstan","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"Reconstruct model matrix survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"","code":"# S3 method for survstan model.matrix(object, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"object object class survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"model matrix (matrices) fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/model.matrix.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model.matrix method for survstan models — model.matrix.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) model.matrix(fit) #>    ecog.ps rx #> 1        1  1 #> 2        1  1 #> 3        2  1 #> 4        1  2 #> 5        1  1 #> 6        2  1 #> 7        2  2 #> 8        2  2 #> 9        1  1 #> 10       2  2 #> 11       2  1 #> 12       1  2 #> 13       2  2 #> 14       1  2 #> 15       1  1 #> 16       2  1 #> 17       2  1 #> 18       1  1 #> 19       1  2 #> 20       1  2 #> 21       2  2 #> 22       2  1 #> 23       1  1 #> 24       2  2 #> 25       1  2 #> 26       1  2 #> attr(,\"assign\") #> [1] 1 2 # }"},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Proportional Hazards Models — phreg","title":"Fitting Proportional Hazards Models — phreg","text":"Function fit proportional hazards (PH) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Proportional Hazards Models — phreg","text":"","code":"phreg(   formula,   data,   baseline = c(\"exponential\", \"weibull\", \"lognormal\", \"loglogistic\"),   ... )"},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Proportional Hazards Models — phreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal loglogistic distributions. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Proportional Hazards Models — phreg","text":"phreg returns object class \"phreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/phreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Proportional Hazards Models — phreg","text":"","code":"# \\donttest{ library(survstan) fit <- phreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) summary(fit) #> Call: #> phreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\", init = 0) #>  #> Proportional hazards model fit  #>  #> Regression coefficients: #>         Estimate   StdErr z.value p.value #> ecog.ps  0.43563  0.58727  0.7418  0.4582 #> rx      -0.59811  0.58823 -1.0168  0.3093 #>  #> Baseline parameters: #>          estimate          se        2.5%     97.5% #> alpha     1.13138     0.25221     0.63706    1.6257 #> gamma   988.99454  1444.84985 -1842.85912 3820.8482 #> ---  #> loglik = -97.08449   AIC = 202.169  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Proportional Odds Models — poreg","title":"Fitting Proportional Odds Models — poreg","text":"Function fit proportional odds (PO) models.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Proportional Odds Models — poreg","text":"","code":"poreg(   formula,   data,   baseline = c(\"exponential\", \"weibull\", \"lognormal\", \"loglogistic\"),   ... )"},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Proportional Odds Models — poreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment function called. baseline chosen baseline distribution; options currently available : exponential, weibull, lognormal loglogistic distributions. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Proportional Odds Models — poreg","text":"poreg returns object class \"poreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/poreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Proportional Odds Models — poreg","text":"","code":"# \\donttest{ library(survstan) fit <- poreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) summary(fit) #> Call: #> poreg(formula = Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian,  #>     baseline = \"weibull\", init = 0) #>  #> Proportional odds model fit  #>  #> Regression coefficients: #>         Estimate   StdErr z.value p.value #> ecog.ps  0.81190  0.71810  1.1306  0.2582 #> rx      -0.69296  0.71685 -0.9667  0.3337 #>  #> Baseline parameters: #>         estimate         se       2.5%     97.5% #> alpha    1.18318    0.30795    0.57961    1.7868 #> gamma 1340.62000  994.14566 -607.86969 3289.1097 #> ---  #> loglik = -97.03918   AIC = 202.0784  # }"},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the summary.survstan output — print.summary.survstan","title":"Print the summary.survstan output — print.summary.survstan","text":"Produces printed summary fitted survstan model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the summary.survstan output — print.summary.survstan","text":"","code":"# S3 method for summary.survstan print(x, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the summary.survstan output — print.summary.survstan","text":"x object class summary.survstan. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/print.summary.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the summary.survstan output — print.summary.survstan","text":"return value, called side effects.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for a survstan object — summary.survstan","title":"Summary for a survstan object — summary.survstan","text":"Summary survstan object","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for a survstan object — summary.survstan","text":"","code":"# S3 method for survstan summary(object, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for a survstan object — summary.survstan","text":"object result call summary.survstan conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/summary.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for a survstan object — summary.survstan","text":"object class summary.survstan containing summary fitted model.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survstan-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'survstan' package. — survstan-package","title":"The 'survstan' package. — survstan-package","text":"aim R package survstan provide toolkit fitting survival models using Stan. R package survstan can used fit right-censored survival data independent censoring. implemented models allow fitting survival data presence/absence covariates. inferential procedures currently based maximum likelihood (ML) approach.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/survstan-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'survstan' package. — survstan-package","text":"Stan Development Team (2023). “RStan: R interface Stan.” R package version 2.21.8, https://mc-stan.org/. Lawless JF (2002). Statistical Models Methods Lifetime Data,  Wiley Series Probability Statistics, 2nd Edition edition. John Wiley Sons. ISBN 9780471372158. Bennett S (1983). “Analysis survival data proportional odds model.” Statistics Medicine, 2(2), 273-277. doi:10.1002/sim.4780020223 . Chen YQ, Wang M (2000). “Analysis Accelerated Hazards Models.” Journal American Statistical Association, 95(450), 608-618. doi:10.1080/01621459.2000.10474236 , https://www.tandfonline.com/doi/abs/10.1080/01621459.2000.10474236.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 method tidy — tidy","title":"Generic S3 method tidy — tidy","text":"Generic S3 method tidy","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 method tidy — tidy","text":"","code":"tidy(object, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 method tidy — tidy","text":"object fitted model object. conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 method tidy — tidy","text":"tibble summary fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic S3 method tidy — tidy","text":"Convert fitted model tibble.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a survstan object — tidy.survstan","title":"Tidy a survstan object — tidy.survstan","text":"Tidy survstan object","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a survstan object — tidy.survstan","text":"","code":"# S3 method for survstan tidy(object, conf.level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a survstan object — tidy.survstan","text":"object fitted model object. conf.level confidence level required. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a survstan object — tidy.survstan","text":"tibble summary fit.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy a survstan object — tidy.survstan","text":"Convert fitted model tibble.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/tidy.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy a survstan object — tidy.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) tidy(fit) #> # A tibble: 4 × 6 #>   parameter type        estimate       se    `2.5%`  `97.5%` #>   <chr>     <chr>          <dbl>    <dbl>     <dbl>    <dbl> #> 1 ecog.ps   coefficient   -0.385    0.527    -1.42     0.648 #> 2 rx        coefficient    0.529    0.529    -0.508    1.57  #> 3 alpha     baseline       1.13     0.252     0.637    1.63  #> 4 gamma     baseline     989.    1445.    -1843.    3821.    # }"},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-covariance matrix — vcov.survstan","title":"Variance-covariance matrix — vcov.survstan","text":"function extracts returns variance-covariance matrix associated regression coefficients maximum likelihood estimation approach used model fitting.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance-covariance matrix — vcov.survstan","text":"","code":"# S3 method for survstan vcov(object, all = FALSE, ...)"},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance-covariance matrix — vcov.survstan","text":"object object class survstan. logical; FALSE (default), covariance matrix associated regression coefficients returned; TRUE, full covariance matrix returned. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance-covariance matrix — vcov.survstan","text":"variance-covariance matrix associated parameters estimators.","code":""},{"path":"https://fndemarqui.github.io/survstan/reference/vcov.survstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance-covariance matrix — vcov.survstan","text":"","code":"# \\donttest{ library(survstan) fit <- aftreg(Surv(futime, fustat) ~ ecog.ps + rx, data = ovarian, baseline = \"weibull\", init = 0) vcov(fit) #>           ecog.ps        rx #> ecog.ps 0.2777096 0.0110424 #> rx      0.0110424 0.2800500 # }"},{"path":"https://fndemarqui.github.io/survstan/news/index.html","id":"survstan-0009000","dir":"Changelog","previous_headings":"","what":"survstan 0.0.0.9000","title":"survstan 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
